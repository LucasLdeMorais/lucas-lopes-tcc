import axios from "axios"

export default async function pesquisaSparql(itemLista) {
    pesquisaSparqlFrom(itemLista).then( (resultFrom) => {
      pesquisaSparqlTo(itemLista).then( (resultFrom, resultTo) => {
        return {
          resultFrom: resultFrom,
          resultTo: resultTo
        }
      })
    })
  }

  async function pesquisaSparqlFrom(itemLista) {
    const resource = itemLista
    const base = "https://dbpedia.org/sparql"
    const defaultGraphUri = encodeURIComponent(`default-graph-uri=http://dbpedia.org`).replaceAll("%3D", "=")
    const query = encodeURIComponent(`query=select+?ResourceFrom+?page+where+{+?ResourceFrom+dbo:wikiPageWikiLink+<${resource}>+.+?page+foaf:primaryTopic+?ResourceFrom+}`).replaceAll("%2B","+").replaceAll("%3D", "=")
    const format = "format=" + encodeURIComponent("application/sparql-results+json").replaceAll("%2D", "-")
    const timeout = "timeout=3000"
    const signalVoid = "signal_void=on"
    const signalUnconnected = "signal_unconnected=on"

    const url = base + "?" + defaultGraphUri + "&" + query + "&" + format + "&" + timeout + "&" + signalVoid + "&" + signalUnconnected
    
    try {
      let resposta = await axios.get(url)
      return resposta.data.results.bindings
    } catch(e) {
      console.log(e)
    }
  }

  async function pesquisaSparqlTo(itemLista) {
    const resource = itemLista
    const base = "https://dbpedia.org/sparql"
    const defaultGraphUri = encodeURIComponent(`default-graph-uri=http://dbpedia.org`).replaceAll("%3D", "=")
    const query = encodeURIComponent(`query=select+?ResourceTo+?page+where+{+<${resource}>+dbo:wikiPageWikiLink+?ResourceTo+.+?page+foaf:primaryTopic+?ResourceTo+}`).replaceAll("%2B","+").replaceAll("%3D", "=")
    const format = "format=" + encodeURIComponent("application/sparql-results+json").replaceAll("%2D", "-")
    const timeout = "timeout=3000"
    const signalVoid = "signal_void=on"
    const signalUnconnected = "signal_unconnected=on"

    const url = base + "?" + defaultGraphUri + "&" + query + "&" + format + "&" + timeout + "&" + signalVoid + "&" + signalUnconnected
    
    try {
      let resposta = await axios.get(url)
      return resposta.data.results.bindings
    } catch(e) {
      console.log(e)
    }
  }