{"version":3,"sources":["../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/chart.js/dist/chart.mjs","../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-chartjs-2/dist/index.js","../node_modules/@mantine/hooks/esm/use-list-state/use-list-state.js","../node_modules/@mui/icons-material/esm/Square.js"],"names":["__webpack_require__","d","__webpack_exports__","_isPointInArea","_factorize","finiteOrDefault","callback","_addGrace","_limitValue","toDegrees","_measureText","HALF_PI","_int16Range","_alignPixel","toPadding","clipArea","renderText","unclipArea","toFont","PI","each","_toLeftRightCenter","_alignStartEnd","TAU","overrides","merge","_capitalize","getRelativePosition","_rlookupByKey","_lookupByKey","_arrayUnique","resolve","getAngleFromPoint","getMaximumSize","_getParentNode","readUsedSize","throttled","supportsEventListenerOptions","_isDomSupported","descriptors","isFunction","_attachContext","getRtlAdapter","overrideTextDirection","_textX","restoreTextDirection","drawPointLegend","noop","distanceBetweenPoints","_setMinAndMaxByKey","niceNum","almostWhole","almostEquals","_decimalPlaces","_longestText","_filterBetween","_lookup","_createResolver","_descriptors","mergeIf","uid","debounce","retinaScale","clearCanvas","setsEqual","_elementsEqual","_isClickEvent","_isBetween","_readValueToProps","_updateBezierControlPoints","_computeSegments","_boundSegments","_steppedInterpolation","_bezierInterpolation","_pointInLine","_steppedLineTo","_bezierCurveTo","drawPoint","addRoundedRectPath","toTRBL","toTRBLCorners","_boundSegment","_normalizeAngle","isArray","color","defaults","effects","resolveObjectKey","isNumberFinite","createContext","isObject","defined","isNullOrUndef","listenArrayEvents","toPercentage","toDimension","formatNumber","_angleBetween","_getStartAndCountOfVisiblePoints","requestAnimFrame","sign","toRadians","unlistenArrayEvents","valueOrDefault","_scaleRangesChanged","isNumber","_parseObjectDataRadialScale","log10","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","id","type","Number","isFinite","defaultValue","dimension","endsWith","parseFloat","fn","args","thisArg","apply","loopable","reverse","keys","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","sources","merger","_mergerIf","hasOwnProperty","keyResolvers","","v","x","y","obj","_step2","parts","split","tmp","_iterator2","part","push","_splitKey","_step","_iterator","_getKeyResolver","str","charAt","toUpperCase","a","b","size","_step3","_iterator3","item","has","Math","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","QUARTER_PI","TWO_THIRDS_PI","range","roundedRange","round","niceRange","pow","floor","fraction","result","sqrt","sort","pop","isNaN","epsilon","abs","rounded","array","property","min","max","degrees","radians","p","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","pt1","pt2","_angleDiff","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","arguments","undefined","table","cmp","mid","hi","lo","last","values","arrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","_len","_key","res","this","object","stub","splice","items","set","Set","add","window","requestAnimationFrame","updateFn","updateArgs","ticking","_len2","rest","_key2","delay","timeout","_len3","_key3","clearTimeout","setTimeout","align","left","right","rtl","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","_iScale$getUserBounds","getUserBounds","minDefined","maxDefined","getPixelForValue","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","c","hex","h1","h2","eq","isShort","r","g","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","concat","_hexString","_hslString","weight","w2","c1","c2","w1","rgb1","rgb2","_interpolate","val","deg","_rotate","get","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","hexString","getScope$1","node","_set","root","scope","Defaults","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","targetScope","targetName","_Object$definePropert","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","_scriptable","startsWith","_indexable","_fallback","data","gc","longest","string","textWidth","measureText","width","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","pixel","currentDevicePixelRatio","halfWidth","canvas","getContext","resetTransform","clearRect","height","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","rotate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","point","area","margin","top","bottom","clip","previous","flip","midpoint","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","text","line","opts","lines","strokeWidth","strokeColor","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","numberOrZero","props","_step4","objProps","read","prop","_iterator4","fallback","console","warn","toFontString","inputs","info","cacheable","minmax","grace","beginAtZero","change","keepZero","parentContext","scopes","_cache","prefixes","rootScopes","getTarget","_resolve","toStringTag","Proxy","deleteProperty","_keys","_cached","proxy","_step7","_iterator7","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","_resolveScriptable","isIndexable","filter","_step5","_iterator5","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_proxy$_scriptable","_proxy$_indexable","_proxy$_allKeys","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_step6","_iterator6","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","_step8","_iterator8","_step9","_iterator9","_step10","_iterator10","resolveKeysFromAllScopes","_this$_parsing$key","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","d01","d12","s01","s12","fa","fb","splineCurveMonotone","pointBefore","pointCurrent","valueAxis","pointsLen","deltaK","mK","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","document","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","evt","borderBox","boxSizing","paddings","borders","_getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","passiveSupported","passive","addEventListener","removeEventListener","el","getPropertyValue","getStyle","cp1","cp2","intlCache","Map","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRightToLeftAdapter","rectX","_x","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_x2","_itemWidth","direction","original","getPropertyPriority","setProperty","prevTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","segment","bounds","prevValue","startBound","endBound","_propertyFn2","_getSegment","_propertyFn","getSegment","inside","subStart","shouldStart","shouldStop","segments","sub","segmentOptions","_loop","_findStartAndEnd","findStartAndEnd","splitByStyles","cur","stop","solidSegments","_fullLoop","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","_step11","_iterator11","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","_assertThisInitialized","self","ReferenceError","_typeof2","_typeof","_possibleConstructorReturn","_getPrototypeOf","setPrototypeOf","__proto__","get_get","_superPropBase","desc","_setPrototypeOf","_inherits","subClass","superClass","chart_ArcElement","chart_BarController","chart_BarElement","chart_BubbleController","chart_CategoryScale","chart_Chart","chart_DoughnutController","plugin_legend","chart_LineController","chart_LineElement","chart_LinearScale","chart_PieController","chart_PointElement","chart_PolarAreaController","chart_RadarController","chart_ScatterController","plugin_title","plugin_tooltip","helpers_segment","animator","Animator","classCallCheck","_request","_charts","_running","_lastDate","createClass","anims","date","callbacks","numSteps","duration","initial","currentStep","_this","_update","_refresh","_this2","Date","now","remaining","running","draw","_active","_total","tick","_notify","charts","complete","progress","event","cb","_getAnims","_this$_getAnims$items","toConsumableArray","reduce","acc","_duration","cancel","interpolators","boolean","factor","c0","valid","mix","number","chart_Animation","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","rej","resolved","chart_animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","chart_Animations","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","_applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_index","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","chart_DatasetController","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","_parsed$i","_this$_parsing","_this$_parsing$xAxisK","xAxisKey","_this$_parsing$yAxisK","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","_getUserBounds","_scale$getUserBounds","chart_getUserBounds","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","_this3","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","_step4$value","slicedToArray","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_args2","_dataChanges","_sync","newCount","computeMinSampleSize","curr","$bar","visibleMetas","getAllParsedValues","getAllScaleValues","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","_borderProps","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","_DatasetController","BarController","_this$_parsing2","_this$_parsing2$xAxis","_this$_parsing2$yAxis","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_this$_getSharedOptio","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","_this$_cachedMeta","_this$options","baseValue","minBarLength","actualBase","floating","applyStack","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","_DatasetController2","BubbleController","_this$_cachedMeta2","_this$_getSharedOptio2","tooltip","title","_DatasetController3","DoughnutController","_this4","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_this$_getRotationExt","_getRotationExtents","_getRatioAndOffset","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_this$_getSharedOptio3","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","_DatasetController4","LineController","_meta$data","_dataset","_getStartAndCountOfVi","_decimated","animated","_this$_cachedMeta3","_this$_getSharedOptio4","_this$options2","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","_DatasetController5","PolarAreaController","_this5","bind","_updateRadius","_this6","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","_this7","angleLines","display","circular","pointLabels","_DoughnutController","PieController","_DatasetController6","RadarController","pointPosition","getPointPositionForValue","chart_Element","Element","useFinalPosition","_this$getProps","getProps","final","_this8","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","calculateSpacing","avgMajorSpacing","chart_skip","majorStart","majorEnd","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","chart_Scale","_Element","Scale","_this9","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","_this$getUserBounds","metas","getMinMax","xLabels","yLabels","beforeUpdate","_this$options3","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","_this$options4","titleOpts","gridOpts","titleHeight","_this$_getLabelSizes","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","_this$options5","_this$options5$ticks","isRotated","labelsBelowTicks","offsetLeft","offsetRight","_this$options6","fullSize","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","_positionAxisID2","_value2","limit","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","_ret","_positionAxisID3","_value3","halfCount","tickTextAlign","backdrop","labelPadding","_this$options7","_this$options8","_this$options8$ticks","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","_this$options9","_titleArgs","titleX","titleY","_positionAxisID","_value","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","_this10","tz","z","gz","getSortedVisibleDatasetMetas","axisID","fontSize","chart_TypedRegistry","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","chart_registry","Registry","controllers","_typedRegistries","_each","_len4","_key4","_len5","_key5","_len6","_key6","_get","_len7","_key7","_len8","_key8","_len9","_key9","_len10","_key10","typedRegistry","_this11","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","_DatasetController7","ScatterController","_meta$data2","_getStartAndCountOfVi2","getElement","_this$_cachedMeta4","_this$options10","chart_abstract","chart_DateAdapter","DateAdapter","chartOptions","timestamp","_format","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","_metasets$i","_index2","_binarySearch","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","_element$getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","_updateDims","setBoxDims","placeBoxes","userPadding","_height","_width","autoPadding","addBox","_layers","removeBox","layoutItem","minPadding","layoutBoxes","_box","_box$options","_box$options$stackWei","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","handleMaxPadding","chart_BasePlatform","BasePlatform","chart_BasicPlatform","_BasePlatform","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","_getRelativePosition","native","fromNativeEvent","addListener","chart_DomPlatform","_BasePlatform2","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","chart_PluginService","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","_i","allPlugins","_ref2","_step12","_iterator12","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","chart_addIfFound","chart_Config","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","_getResolver","getResolver","subPrefixes","_step14","_descriptors2","_iterator14","chart_hasFunction","needContext","subResolver","_step13","_iterator13","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","animationOptions","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","_i2","intKey","Chart","userConfig","_this12","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","scalesOptions","axisOptions","_this13","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","_this14","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","_defaults$datasets$ty","_updateMetasets","_this15","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","_this16","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","_step15","_iterator15","_getUniformDataChanges","_step15$value","datasetCount","makeSet","changeSet","_this17","noArea","_this17$_layers","_idx","_i3","_ilen","_updateDataset","_this$_resizeBeforeDr","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","_this$canvas","toDataURL","bindUserEvents","bindResponsiveEvents","_this18","_add","_this19","detached","_remove","isAttached","_this20","activeElements","_this21","lastActive","_ref4","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","_this22","inChartArea","eventFilter","_handleEvent","_this$_active","_getActiveElements","isClick","lastEvent","determineLastEvent","getElementsAtEventForMode","_this$options11","chart_invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","_parseBorderRadius$","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","_pCenter","_pCenter2","p8","_pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","chart_drawBorder","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","_Element2","ArcElement","_this23","chartX","chartY","_getAngleFromPoint2","_this$getProps2","rAdjust","betweenAngles","withinRadius","_this$getProps3","_this$options12","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","_params$start","paramsStart","_params$end","paramsEnd","segmentStart","segmentEnd","outside","chart_pathSegment","_pathVars","lineMethod","stepped","getLineMethod","_ref5","_ref5$move","fastPathSegment","prevX","lastY","_pathVars2","_ref6","_ref6$move","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","chart_draw","path","_path","strokePathWithCache","_step16","segmentMethod","_iterator16","strokePathDirect","_Element3","LineElement","_this24","_points","_segments","_pointsUpdated","_getInterpolationMethod","_segments$i","interpolated","_step17","_iterator17","inRange$1","hitRadius","_Element4","PointElement","_this25","mouseX","mouseY","_this$getProps4","_this$getProps5","hoverRadius","getBarBounds","bar","half","_bar$getProps","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","_inRange","skipX","skipY","addNormalRectPath","inflateRect","refRect","_Element5","BarElement","_this26","_this$options13","_boundingRects","addRectPath","_this$getProps6","getBoxSize","labelOpts","_labelOpts$boxHeight","boxHeight","_labelOpts$boxWidth","boxWidth","usePointStyle","pointStyleWidth","itemHeight","chart_Legend","_Element6","Legend","_this27","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","_this28","labelFont","_computeTitleHeight","_getBoxSize","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","_this$options14","rtlHelper","_step23","_iterator23","hitbox","_step24","_iterator24","_hitbox","_draw","cursor","_this29","defaultColor","fontColor","halfFontSize","_getBoxSize2","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","_element","_args","adjustHitBoxes","afterEvent","handleEvent","ci","_chart$legend$options","chart_Title","_Element7","Title","_this30","_padding","textSize","fontOpts","_this$_drawArgs","_drawArgs","titleBlock","createTitle","positioners","WeakMap","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","_controller$getLabelA","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","_chart$chartArea","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","_toTRBLCorners","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","chart_Tooltip","_Element8","Tooltip","_this31","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","_this32","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","_this33","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","_toTRBLCorners2","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","_toTRBLCorners3","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","_this34","_ref11","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_willRender","labelCount","addIfString","addedLabels","unshift","_Scale","CategoryScale","_this35","_startValue","_valueRange","_addedLabels","added","_step25","_iterator25","_step25$value","_index3","chart_validIndex","lastIndexOf","findOrAddLabel","_this$getUserBounds2","_this$getMinMax","getDecimalForPixel","relativeLabelSize","minSpacing","_ref12","chart_LinearScaleBase","_Scale2","LinearScaleBase","_this36","_endValue","_this$getUserBounds3","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","maxTicks","stepSize","computeTickLimit","getTickLimit","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","decimalPlaces","generateTicks$1","_maxDigits","_LinearScaleBase","LinearScale","_this$getMinMax2","handleTickRangeOptions","isMajor","tickVal","chart_LogarithmicScale","_Scale3","LogarithmicScale","_this37","_zero","_this$getMinMax3","_this$getUserBounds4","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","chart_RadialLinearScale","_LinearScaleBase2","RadialLinearScale","_this38","_this$getMinMax4","_this39","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","_this$_pointLabelItem","_this$options15","_this40","_scale$_pointLabelIte","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","_this41","animate","angleLines.color","pointLabels.color","ticks.color","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","_parse","adapter","_adapter","_scale$_parseOpts","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","_lookup2","ticksFromTimestamps","majorUnit","setMajorTicks","chart_TimeScale","_Scale4","TimeScale","_this42","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_this$getUserBounds5","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","chart_interpolate","prevSource","nextSource","prevTarget","nextTarget","_lookupByKey2","_table$lo","_table$hi","_lookupByKey3","_table$lo2","_table$hi2","span","chart_TimeSeriesScale","_TimeScale","TimeSeriesScale","_this43","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","chartjs_plugin_datalabels_esm_plugin","screen","deviceXDPI","logicalXDPI","utils","updates","orient","origin","x0","y0","dx","dy","ln","R_INSIDE","R_LEFT","R_RIGHT","R_BOTTOM","R_TOP","region","compute$1","anchor","clamp","r0","r1","clipped","vx","vy","aligned","rx","ry","sx","sy","rasterize","getScaleOrigin","drawFrame","model","bgColor","drawRoundedRect","drawTextLine","shadow","shadowBlur","stroked","filled","Label","me","_model","_rects","_el","_modelize","dist_chart","positioner","textShadowBlur","textShadowColor","th","tw","tx","ty","frame","geometry","textGeometry","shadowColor","drawText","MIN_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","HitBox","_rotation","_rect","coordinates","vs","intersects","pr0","pr1","axes","prepare","$layout","_hidable","_visible","sa","sb","state","dirty","collider","s0","s1","collide","h0","compute","lookup","DEFAULT_KEY","dispatchEvent","callback$1","groups","$groups","_dirty","handleMoveEvents","expando","enter","leave","_labels","_hovered","dispatchMoveEvents","beforeInit","_actives","_listened","_datasets","afterDatasetUpdate","datalabels","configs","afterDatasetsDraw","beforeEvent","handlers","click","handleClickEvents","actives","getActiveElements","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bar","Line","Pie","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","objectSpread","cloneData","nextData","ChartComponent","param","_param$height","_param$width","_param$redraw","redraw","_param$plugins","fallbackContent","updateMode","canvasRef","react","chartRef","renderChart","destroyChart","destroy","nextOptions","react_default","createElement","role","createTypedChart","registerables","useListState","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","C_Users_home_Documents_Git_repos_lucas_lopes_tcc_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_3__","__defProp","__defProps","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","__spreadValues","__spreadProps","initialValue","_useState","_useState2","setState","append","prepend","insert","cloned","applyWhere","condition","indices","_","reorder","setItem","setItemProp","_utils_createSvgIcon__WEBPACK_IMPORTED_MODULE_0__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"static/js/2.28037b95.chunk.js","sourcesContent":["import _defineProperty from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _toConsumableArray from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nvar uid = function () {\n  var id = 0;\n  return function () {\n    return id++;\n  };\n}();\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  var type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nvar isNumberFinite = function isNumberFinite(value) {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n};\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nvar toPercentage = function toPercentage(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n};\nvar toDimension = function toDimension(value, dimension) {\n  return typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n};\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  var i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  var i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    var target = Object.create(null);\n    var keys = Object.keys(source);\n    var klen = keys.length;\n    var k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  var tval = target[key];\n  var sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  var sources = isArray(source) ? source : [source];\n  var ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  var merger = options.merger || _merger;\n  for (var i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    var keys = Object.keys(source);\n    for (var k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {\n    merger: _mergerIf\n  });\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  var tval = target[key];\n  var sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nvar keyResolvers = {\n  '': function _(v) {\n    return v;\n  },\n  x: function x(o) {\n    return o.x;\n  },\n  y: function y(o) {\n    return o.y;\n  }\n};\nfunction resolveObjectKey(obj, key) {\n  var resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  var keys = _splitKey(key);\n  return function (obj) {\n    var _iterator = _createForOfIteratorHelper(keys),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var k = _step.value;\n        if (k === '') {\n          break;\n        }\n        obj = obj && obj[k];\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  var parts = key.split('.');\n  var keys = [];\n  var tmp = '';\n  var _iterator2 = _createForOfIteratorHelper(parts),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var part = _step2.value;\n      tmp += part;\n      if (tmp.endsWith('\\\\')) {\n        tmp = tmp.slice(0, -1) + '.';\n      } else {\n        keys.push(tmp);\n        tmp = '';\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nvar defined = function defined(value) {\n  return typeof value !== 'undefined';\n};\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\nvar setsEqual = function setsEqual(a, b) {\n  if (a.size !== b.size) {\n    return false;\n  }\n  var _iterator3 = _createForOfIteratorHelper(a),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var item = _step3.value;\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\nvar PI = Math.PI;\nvar TAU = 2 * PI;\nvar PITAU = TAU + PI;\nvar INFINITY = Number.POSITIVE_INFINITY;\nvar RAD_PER_DEG = PI / 180;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\nvar log10 = Math.log10;\nvar sign = Math.sign;\nfunction niceNum(range) {\n  var roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  var niceRange = Math.pow(10, Math.floor(log10(range)));\n  var fraction = range / niceRange;\n  var niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  var result = [];\n  var sqrt = Math.sqrt(value);\n  var i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort(function (a, b) {\n    return a - b;\n  }).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  var rounded = Math.round(x);\n  return rounded - epsilon <= x && rounded + epsilon >= x;\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  var i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  var e = 1;\n  var p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  var distanceFromXCenter = anglePoint.x - centrePoint.x;\n  var distanceFromYCenter = anglePoint.y - centrePoint.y;\n  var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < -0.5 * PI) {\n    angle += TAU;\n  }\n  return {\n    angle: angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  var a = _normalizeAngle(angle);\n  var s = _normalizeAngle(start);\n  var e = _normalizeAngle(end);\n  var angleToStart = _normalizeAngle(s - a);\n  var angleToEnd = _normalizeAngle(e - a);\n  var startToAngle = _normalizeAngle(a - s);\n  var endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end) {\n  var epsilon = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1e-6;\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || function (index) {\n    return table[index] < value;\n  };\n  var hi = table.length - 1;\n  var lo = 0;\n  var mid;\n  while (hi - lo > 1) {\n    mid = lo + hi >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {\n    lo: lo,\n    hi: hi\n  };\n}\nvar _lookupByKey = function _lookupByKey(table, key, value, last) {\n  return _lookup(table, value, last ? function (index) {\n    return table[index][key] <= value;\n  } : function (index) {\n    return table[index][key] < value;\n  });\n};\nvar _rlookupByKey = function _rlookupByKey(table, key, value) {\n  return _lookup(table, value, function (index) {\n    return table[index][key] >= value;\n  });\n};\nfunction _filterBetween(values, min, max) {\n  var start = 0;\n  var end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach(function (key) {\n    var method = '_onData' + _capitalize(key);\n    var base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value: function value() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var res = base.apply(this, args);\n        array._chartjs.listeners.forEach(function (object) {\n          if (typeof object[method] === 'function') {\n            object[method].apply(object, args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  var stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  var listeners = stub.listeners;\n  var index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach(function (key) {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  var set = new Set();\n  var i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nvar requestAnimFrame = function () {\n  if (typeof window === 'undefined') {\n    return function (callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}();\nfunction throttled(fn, thisArg, updateFn) {\n  var updateArgs = updateFn || function (args) {\n    return Array.prototype.slice.call(args);\n  };\n  var ticking = false;\n  var args = [];\n  return function () {\n    for (var _len2 = arguments.length, rest = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      rest[_key2] = arguments[_key2];\n    }\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, function () {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  var timeout;\n  return function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nvar _toLeftRightCenter = function _toLeftRightCenter(align) {\n  return align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n};\nvar _alignStartEnd = function _alignStartEnd(align, start, end) {\n  return align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n};\nvar _textX = function _textX(align, left, right, rtl) {\n  var check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  var pointCount = points.length;\n  var start = 0;\n  var count = pointCount;\n  if (meta._sorted) {\n    var iScale = meta.iScale,\n      _parsed = meta._parsed;\n    var axis = iScale.axis;\n    var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n    if (minDefined) {\n      start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max, true).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nfunction _scaleRangesChanged(meta) {\n  var xScale = meta.xScale,\n    yScale = meta.yScale,\n    _scaleRanges = meta._scaleRanges;\n  var newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  var changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\nvar atEdge = function atEdge(t) {\n  return t === 0 || t === 1;\n};\nvar elasticIn = function elasticIn(t, s, p) {\n  return -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n};\nvar elasticOut = function elasticOut(t, s, p) {\n  return Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n};\nvar effects = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return -t * (t - 2);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1);\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return (t -= 1) * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2);\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return -((t -= 1) * t * t * t - 1);\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2);\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return (t -= 1) * t * t * t * t + 1;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    return (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2);\n  },\n  easeInSine: function easeInSine(t) {\n    return -Math.cos(t * HALF_PI) + 1;\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * HALF_PI);\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -0.5 * (Math.cos(PI * t) - 1);\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2);\n  },\n  easeInCirc: function easeInCirc(t) {\n    return t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1);\n  },\n  easeOutCirc: function easeOutCirc(t) {\n    return Math.sqrt(1 - (t -= 1) * t);\n  },\n  easeInOutCirc: function easeInOutCirc(t) {\n    return (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n  },\n  easeInElastic: function easeInElastic(t) {\n    return atEdge(t) ? t : elasticIn(t, 0.075, 0.3);\n  },\n  easeOutElastic: function easeOutElastic(t) {\n    return atEdge(t) ? t : elasticOut(t, 0.075, 0.3);\n  },\n  easeInOutElastic: function easeInOutElastic(t) {\n    var s = 0.1125;\n    var p = 0.45;\n    return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack: function easeInBack(t) {\n    var s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack: function easeOutBack(t) {\n    var s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack: function easeInOutBack(t) {\n    var s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n  },\n  easeInBounce: function easeInBounce(t) {\n    return 1 - effects.easeOutBounce(1 - t);\n  },\n  easeOutBounce: function easeOutBounce(t) {\n    var m = 7.5625;\n    var d = 2.75;\n    if (t < 1 / d) {\n      return m * t * t;\n    }\n    if (t < 2 / d) {\n      return m * (t -= 1.5 / d) * t + 0.75;\n    }\n    if (t < 2.5 / d) {\n      return m * (t -= 2.25 / d) * t + 0.9375;\n    }\n    return m * (t -= 2.625 / d) * t + 0.984375;\n  },\n  easeInOutBounce: function easeInOutBounce(t) {\n    return t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n  }\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nvar lim = function lim(v, l, h) {\n  return Math.max(Math.min(v, h), l);\n};\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nvar map$1 = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15\n};\nvar hex = _toConsumableArray('0123456789ABCDEF');\nvar h1 = function h1(b) {\n  return hex[b & 0xF];\n};\nvar h2 = function h2(b) {\n  return hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n};\nvar eq = function eq(b) {\n  return (b & 0xF0) >> 4 === (b & 0xF);\n};\nvar isShort = function isShort(v) {\n  return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n};\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n      };\n    }\n  }\n  return ret;\n}\nvar alpha = function alpha(a, f) {\n  return a < 255 ? f(a) : '';\n};\nfunction _hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f) : undefined;\n}\nvar HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  var a = s * Math.min(l, 1 - l);\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 30) % 12;\n    return l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  };\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  var f = function f(n) {\n    var k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (n + h / 60) % 6;\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  };\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  var rgb = hsl2rgbn(h, 1, 0.5);\n  var i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return (g - b) / d + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  var range = 255;\n  var r = v.r / range;\n  var g = v.g / range;\n  var b = v.b / range;\n  var max = Math.max(r, g, b);\n  var min = Math.min(r, g, b);\n  var l = (max + min) / 2;\n  var h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  var m = HUE_RE.exec(str);\n  var a = 255;\n  var v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  var h = hue(+m[2]);\n  var p1 = +m[3] / 100;\n  var p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction _rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction _hslString(v) {\n  if (!v) {\n    return;\n  }\n  var a = rgb2hsl(v);\n  var h = a[0];\n  var s = n2p(a[1]);\n  var l = n2p(a[2]);\n  return v.a < 255 ? \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(b2n(v.a), \")\") : \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\");\n}\nvar map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nvar names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  var unpacked = {};\n  var keys = Object.keys(names$1);\n  var tkeys = Object.keys(map);\n  var i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nvar names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  var a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nvar RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  var m = RGB_RE.exec(str);\n  var a = 255;\n  var r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    var v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction _rgbString(v) {\n  return v && (v.a < 255 ? \"rgba(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \", \").concat(b2n(v.a), \")\") : \"rgb(\".concat(v.r, \", \").concat(v.g, \", \").concat(v.b, \")\"));\n}\nvar to = function to(v) {\n  return v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\n};\nvar from = function from(v) {\n  return v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n};\nfunction _interpolate(rgb1, rgb2, t) {\n  var r = from(b2n(rgb1.r));\n  var g = from(b2n(rgb1.g));\n  var b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    var tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {\n    r: 0,\n    g: 0,\n    b: 0,\n    a: 255\n  };\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {\n        r: input[0],\n        g: input[1],\n        b: input[2],\n        a: 255\n      };\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1\n    });\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nvar Color = /*#__PURE__*/function () {\n  function Color(input) {\n    _classCallCheck(this, Color);\n    if (input instanceof Color) {\n      return input;\n    }\n    var type = typeof input;\n    var v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  _createClass(Color, [{\n    key: \"rgbString\",\n    value: function rgbString() {\n      return this._valid ? _rgbString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"hexString\",\n    value: function hexString() {\n      return this._valid ? _hexString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"hslString\",\n    value: function hslString() {\n      return this._valid ? _hslString(this._rgb) : undefined;\n    }\n  }, {\n    key: \"mix\",\n    value: function mix(color, weight) {\n      if (color) {\n        var c1 = this.rgb;\n        var c2 = color.rgb;\n        var w2;\n        var p = weight === w2 ? 0.5 : weight;\n        var w = 2 * p - 1;\n        var a = c1.a - c2.a;\n        var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        this.rgb = c1;\n      }\n      return this;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(color, t) {\n      if (color) {\n        this._rgb = _interpolate(this._rgb, color._rgb, t);\n      }\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new Color(this.rgb);\n    }\n  }, {\n    key: \"alpha\",\n    value: function alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n  }, {\n    key: \"clearer\",\n    value: function clearer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n  }, {\n    key: \"greyscale\",\n    value: function greyscale() {\n      var rgb = this._rgb;\n      var val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n  }, {\n    key: \"opaquer\",\n    value: function opaquer(ratio) {\n      var rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n  }, {\n    key: \"negate\",\n    value: function negate() {\n      var v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n  }, {\n    key: \"lighten\",\n    value: function lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n  }, {\n    key: \"darken\",\n    value: function darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n  }, {\n    key: \"saturate\",\n    value: function saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n  }, {\n    key: \"desaturate\",\n    value: function desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(deg) {\n      _rotate(this._rgb, deg);\n      return this;\n    }\n  }, {\n    key: \"valid\",\n    get: function get() {\n      return this._valid;\n    }\n  }, {\n    key: \"rgb\",\n    get: function get() {\n      var v = clone(this._rgb);\n      if (v) {\n        v.a = b2n(v.a);\n      }\n      return v;\n    },\n    set: function set(obj) {\n      this._rgb = fromObject(obj);\n    }\n  }]);\n  return Color;\n}();\nfunction index_esm(input) {\n  return new Color(input);\n}\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    var type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\nvar overrides = Object.create(null);\nvar descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  var keys = key.split('.');\n  for (var i = 0, n = keys.length; i < n; ++i) {\n    var k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction _set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nvar Defaults = /*#__PURE__*/function () {\n  function Defaults(_descriptors) {\n    _classCallCheck(this, Defaults);\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = function (context) {\n      return context.chart.platform.getDevicePixelRatio();\n    };\n    this.elements = {};\n    this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = function (ctx, options) {\n      return getHoverColor(options.backgroundColor);\n    };\n    this.hoverBorderColor = function (ctx, options) {\n      return getHoverColor(options.borderColor);\n    };\n    this.hoverColor = function (ctx, options) {\n      return getHoverColor(options.color);\n    };\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  _createClass(Defaults, [{\n    key: \"set\",\n    value: function set(scope, values) {\n      return _set(this, scope, values);\n    }\n  }, {\n    key: \"get\",\n    value: function get(scope) {\n      return getScope$1(this, scope);\n    }\n  }, {\n    key: \"describe\",\n    value: function describe(scope, values) {\n      return _set(descriptors, scope, values);\n    }\n  }, {\n    key: \"override\",\n    value: function override(scope, values) {\n      return _set(overrides, scope, values);\n    }\n  }, {\n    key: \"route\",\n    value: function route(scope, name, targetScope, targetName) {\n      var _Object$definePropert;\n      var scopeObject = getScope$1(this, scope);\n      var targetScopeObject = getScope$1(this, targetScope);\n      var privateName = '_' + name;\n      Object.defineProperties(scopeObject, (_Object$definePropert = {}, _defineProperty(_Object$definePropert, privateName, {\n        value: scopeObject[name],\n        writable: true\n      }), _defineProperty(_Object$definePropert, name, {\n        enumerable: true,\n        get: function get() {\n          var local = this[privateName];\n          var target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set: function set(value) {\n          this[privateName] = value;\n        }\n      }), _Object$definePropert));\n    }\n  }]);\n  return Defaults;\n}();\nvar defaults = new Defaults({\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('on');\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'events';\n  },\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false\n  }\n});\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  var textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  var data = cache.data = cache.data || {};\n  var gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  var longest = 0;\n  var ilen = arrayOfThings.length;\n  var i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  var gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  var devicePixelRatio = chart.currentDevicePixelRatio;\n  var halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  var type, xOffset, yOffset, size, cornerRadius, width;\n  var style = options.pointStyle;\n  var rotation = options.rotation;\n  var radius = options.radius;\n  var rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    case 'rectRot':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    case 'cross':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n    case 'star':\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      rad += QUARTER_PI;\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      ctx.moveTo(x + yOffset, y - xOffset);\n      ctx.lineTo(x - yOffset, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n      break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    var midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction renderText(ctx, text, x, y, font) {\n  var opts = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n  var lines = isArray(text) ? text : [text];\n  var stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  var i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    var metrics = ctx.measureText(line);\n    var left = x - metrics.actualBoundingBoxLeft;\n    var right = x + metrics.actualBoundingBoxRight;\n    var top = y - metrics.actualBoundingBoxAscent;\n    var bottom = y + metrics.actualBoundingBoxDescent;\n    var yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  var x = rect.x,\n    y = rect.y,\n    w = rect.w,\n    h = rect.h,\n    radius = rect.radius;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nvar LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nvar FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  var matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n  }\n  return size * value;\n}\nvar numberOrZero = function numberOrZero(v) {\n  return +v || 0;\n};\nfunction _readValueToProps(value, props) {\n  var ret = {};\n  var objProps = isObject(props);\n  var keys = objProps ? Object.keys(props) : props;\n  var read = isObject(value) ? objProps ? function (prop) {\n    return valueOrDefault(value[prop], value[props[prop]]);\n  } : function (prop) {\n    return value[prop];\n  } : function () {\n    return value;\n  };\n  var _iterator4 = _createForOfIteratorHelper(keys),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var prop = _step4.value;\n      ret[prop] = numberOrZero(read(prop));\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {\n    top: 'y',\n    right: 'x',\n    bottom: 'y',\n    left: 'x'\n  });\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  var obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  var size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  var style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  var font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size: size,\n    style: style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  var cacheable = true;\n  var i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  var min = minmax.min,\n    max = minmax.max;\n  var change = toDimension(grace, (max - min) / 2);\n  var keepZero = function keepZero(value, add) {\n    return beginAtZero && value === 0 ? 0 : value + add;\n  };\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\nfunction _createResolver(scopes) {\n  var _cache;\n  var prefixes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [''];\n  var rootScopes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : scopes;\n  var fallback = arguments.length > 3 ? arguments[3] : undefined;\n  var getTarget = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {\n    return scopes[0];\n  };\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  var cache = (_cache = {}, _defineProperty(_cache, Symbol.toStringTag, 'Object'), _defineProperty(_cache, \"_cacheable\", true), _defineProperty(_cache, \"_scopes\", scopes), _defineProperty(_cache, \"_rootScopes\", rootScopes), _defineProperty(_cache, \"_fallback\", fallback), _defineProperty(_cache, \"_getTarget\", getTarget), _defineProperty(_cache, \"override\", function override(scope) {\n    return _createResolver([scope].concat(_toConsumableArray(scopes)), prefixes, rootScopes, fallback);\n  }), _cache);\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get: function get(target, prop) {\n      return _cached(target, prop, function () {\n        return _resolveWithPrefixes(prop, prefixes, scopes, target);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has: function has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys: function ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set: function set(target, prop, value) {\n      var storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  var cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: function setContext(ctx) {\n      return _attachContext(proxy, ctx, subProxy, descriptorDefaults);\n    },\n    override: function override(scope) {\n      return _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults);\n    }\n  };\n  return new Proxy(cache, {\n    deleteProperty: function deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get: function get(target, prop, receiver) {\n      return _cached(target, prop, function () {\n        return _resolveWithContext(target, prop, receiver);\n      });\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n        enumerable: true,\n        configurable: true\n      } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf: function getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has: function has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys: function ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set: function set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    scriptable: true,\n    indexable: true\n  };\n  var _proxy$_scriptable = proxy._scriptable,\n    _scriptable = _proxy$_scriptable === void 0 ? defaults.scriptable : _proxy$_scriptable,\n    _proxy$_indexable = proxy._indexable,\n    _indexable = _proxy$_indexable === void 0 ? defaults.indexable : _proxy$_indexable,\n    _proxy$_allKeys = proxy._allKeys,\n    _allKeys = _proxy$_allKeys === void 0 ? defaults.allKeys : _proxy$_allKeys;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : function () {\n      return _scriptable;\n    },\n    isIndexable: isFunction(_indexable) ? _indexable : function () {\n      return _indexable;\n    }\n  };\n}\nvar readKey = function readKey(prefix, name) {\n  return prefix ? prefix + _capitalize(name) : name;\n};\nvar needsSubResolver = function needsSubResolver(prop, value) {\n  return isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n};\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  var value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  var _proxy = target._proxy,\n    _context = target._context,\n    _subProxy = target._subProxy,\n    descriptors = target._descriptors;\n  var value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  var _proxy = target._proxy,\n    _context = target._context,\n    _subProxy = target._subProxy,\n    _stack = target._stack;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  var _proxy = target._proxy,\n    _context = target._context,\n    _subProxy = target._subProxy,\n    descriptors = target._descriptors;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    var arr = value;\n    var scopes = _proxy._scopes.filter(function (s) {\n      return s !== arr;\n    });\n    value = [];\n    var _iterator5 = _createForOfIteratorHelper(arr),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var item = _step5.value;\n        var resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nvar getScope = function getScope(key, parent) {\n  return key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n};\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  var _iterator6 = _createForOfIteratorHelper(parentScopes),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var parent = _step6.value;\n      var scope = getScope(key, parent);\n      if (scope) {\n        set.add(scope);\n        var fallback = resolveFallback(scope._fallback, key, value);\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  var rootScopes = resolver._rootScopes;\n  var fallback = resolveFallback(resolver._fallback, prop, value);\n  var allScopes = [].concat(_toConsumableArray(parentScopes), _toConsumableArray(rootScopes));\n  var set = new Set();\n  set.add(value);\n  var key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback, function () {\n    return subGetTarget(resolver, prop, value);\n  });\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  var parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  var target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  var value;\n  var _iterator7 = _createForOfIteratorHelper(prefixes),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var prefix = _step7.value;\n      value = _resolve(readKey(prefix, prop), scopes);\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n}\nfunction _resolve(key, scopes) {\n  var _iterator8 = _createForOfIteratorHelper(scopes),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var scope = _step8.value;\n      if (!scope) {\n        continue;\n      }\n      var value = scope[key];\n      if (defined(value)) {\n        return value;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  var keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  var set = new Set();\n  var _iterator9 = _createForOfIteratorHelper(scopes),\n    _step9;\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var scope = _step9.value;\n      var _iterator10 = _createForOfIteratorHelper(Object.keys(scope).filter(function (k) {\n          return !k.startsWith('_');\n        })),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var key = _step10.value;\n          set.add(key);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var _this$_parsing$key = this._parsing.key,\n    key = _this$_parsing$key === void 0 ? 'r' : _this$_parsing$key;\n  var parsed = new Array(count);\n  var i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\nvar EPSILON = Number.EPSILON || 1e-14;\nvar getPoint = function getPoint(points, i) {\n  return i < points.length && !points[i].skip && points[i];\n};\nvar getValueAxis = function getValueAxis(indexAxis) {\n  return indexAxis === 'x' ? 'y' : 'x';\n};\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  var previous = firstPoint.skip ? middlePoint : firstPoint;\n  var current = middlePoint;\n  var next = afterPoint.skip ? middlePoint : afterPoint;\n  var d01 = distanceBetweenPoints(current, previous);\n  var d12 = distanceBetweenPoints(next, current);\n  var s01 = d01 / (d01 + d12);\n  var s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  var fa = t * s01;\n  var fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  var pointsLen = points.length;\n  var alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n  for (var i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK) {\n  var indexAxis = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var delta, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n  for (var i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    var iPixel = pointCurrent[indexAxis];\n    var vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[\"cp1\".concat(indexAxis)] = iPixel - delta;\n      pointCurrent[\"cp1\".concat(valueAxis)] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[\"cp2\".concat(indexAxis)] = iPixel + delta;\n      pointCurrent[\"cp2\".concat(valueAxis)] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points) {\n  var indexAxis = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'x';\n  var valueAxis = getValueAxis(indexAxis);\n  var pointsLen = points.length;\n  var deltaK = Array(pointsLen).fill(0);\n  var mK = Array(pointsLen);\n  var i, pointBefore, pointCurrent;\n  var pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      var slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  var i, ilen, point, inArea, inAreaPrev;\n  var inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  var i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter(function (pt) {\n      return !pt.skip;\n    });\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    var prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  var parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  var valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nvar getComputedStyle = function getComputedStyle(element) {\n  return window.getComputedStyle(element, null);\n};\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nvar positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  var result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (var i = 0; i < 4; i++) {\n    var pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nvar useOffsetPos = function useOffsetPos(x, y, target) {\n  return (x > 0 || y > 0) && (!target || !target.shadowRoot);\n};\nfunction getCanvasPosition(e, canvas) {\n  var touches = e.touches;\n  var source = touches && touches.length ? touches[0] : e;\n  var offsetX = source.offsetX,\n    offsetY = source.offsetY;\n  var box = false;\n  var x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    var rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {\n    x: x,\n    y: y,\n    box: box\n  };\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  var canvas = chart.canvas,\n    currentDevicePixelRatio = chart.currentDevicePixelRatio;\n  var style = getComputedStyle(canvas);\n  var borderBox = style.boxSizing === 'border-box';\n  var paddings = getPositionedStyle(style, 'padding');\n  var borders = getPositionedStyle(style, 'border', 'width');\n  var _getCanvasPosition = getCanvasPosition(evt, canvas),\n    x = _getCanvasPosition.x,\n    y = _getCanvasPosition.y,\n    box = _getCanvasPosition.box;\n  var xOffset = paddings.left + (box && borders.left);\n  var yOffset = paddings.top + (box && borders.top);\n  var width = chart.width,\n    height = chart.height;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  var maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    var container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      var rect = container.getBoundingClientRect();\n      var containerStyle = getComputedStyle(container);\n      var containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      var containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width: width,\n    height: height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nvar round1 = function round1(v) {\n  return Math.round(v * 10) / 10;\n};\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  var style = getComputedStyle(canvas);\n  var margins = getPositionedStyle(style, 'margin');\n  var maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  var maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  var containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  var width = containerSize.width,\n    height = containerSize.height;\n  if (style.boxSizing === 'content-box') {\n    var borders = getPositionedStyle(style, 'border', 'width');\n    var paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  var pixelRatio = forceRatio || 1;\n  var deviceHeight = Math.floor(chart.height * pixelRatio);\n  var deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  var canvas = chart.canvas;\n  if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n    canvas.style.height = \"\".concat(chart.height, \"px\");\n    canvas.style.width = \"\".concat(chart.width, \"px\");\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nvar supportsEventListenerOptions = function () {\n  var passiveSupported = false;\n  try {\n    var options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {}\n  return passiveSupported;\n}();\nfunction readUsedSize(element, property) {\n  var value = getStyle(element, property);\n  var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  var cp1 = {\n    x: p1.cp2x,\n    y: p1.cp2y\n  };\n  var cp2 = {\n    x: p2.cp1x,\n    y: p2.cp1y\n  };\n  var a = _pointInLine(p1, cp1, t);\n  var b = _pointInLine(cp1, cp2, t);\n  var c = _pointInLine(cp2, p2, t);\n  var d = _pointInLine(a, b, t);\n  var e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\nvar intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  var cacheKey = locale + JSON.stringify(options);\n  var formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\nvar getRightToLeftAdapter = function getRightToLeftAdapter(rectX, width) {\n  return {\n    x: function x(_x) {\n      return rectX + rectX + width - _x;\n    },\n    setWidth: function setWidth(w) {\n      width = w;\n    },\n    textAlign: function textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus: function xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr: function leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    }\n  };\n};\nvar getLeftToRightAdapter = function getLeftToRightAdapter() {\n  return {\n    x: function x(_x2) {\n      return _x2;\n    },\n    setWidth: function setWidth(w) {},\n    textAlign: function textAlign(align) {\n      return align;\n    },\n    xPlus: function xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr: function leftForLtr(x, _itemWidth) {\n      return x;\n    }\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  var style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: function compare(a, b) {\n      return a - b;\n    },\n    normalize: function normalize(x) {\n      return x;\n    }\n  };\n}\nfunction normalizeSegment(_ref) {\n  var start = _ref.start,\n    end = _ref.end,\n    count = _ref.count,\n    loop = _ref.loop,\n    style = _ref.style;\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style: style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  var property = bounds.property,\n    startBound = bounds.start,\n    endBound = bounds.end;\n  var _propertyFn = propertyFn(property),\n    between = _propertyFn.between,\n    normalize = _propertyFn.normalize;\n  var count = points.length;\n  var start = segment.start,\n    end = segment.end,\n    loop = segment.loop;\n  var i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {\n    start: start,\n    end: end,\n    loop: loop,\n    style: segment.style\n  };\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  var property = bounds.property,\n    startBound = bounds.start,\n    endBound = bounds.end;\n  var count = points.length;\n  var _propertyFn2 = propertyFn(property),\n    compare = _propertyFn2.compare,\n    between = _propertyFn2.between,\n    normalize = _propertyFn2.normalize;\n  var _getSegment = getSegment(segment, points, bounds),\n    start = _getSegment.start,\n    end = _getSegment.end,\n    loop = _getSegment.loop,\n    style = _getSegment.style;\n  var result = [];\n  var inside = false;\n  var subStart = null;\n  var value, point, prevValue;\n  var startIsBefore = function startIsBefore() {\n    return between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  };\n  var endIsBefore = function endIsBefore() {\n    return compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  };\n  var shouldStart = function shouldStart() {\n    return inside || startIsBefore();\n  };\n  var shouldStop = function shouldStop() {\n    return !inside || endIsBefore();\n  };\n  for (var i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end: i,\n        loop: loop,\n        count: count,\n        style: style\n      }));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({\n      start: subStart,\n      end: end,\n      loop: loop,\n      count: count,\n      style: style\n    }));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  var result = [];\n  var segments = line.segments;\n  for (var i = 0; i < segments.length; i++) {\n    var sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push.apply(result, _toConsumableArray(sub));\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  var start = 0;\n  var end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {\n    start: start,\n    end: end\n  };\n}\nfunction solidSegments(points, start, max, loop) {\n  var count = points.length;\n  var result = [];\n  var last = start;\n  var prev = points[start];\n  var end;\n  for (end = start + 1; end <= max; ++end) {\n    var cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({\n          start: start % count,\n          end: (end - 1) % count,\n          loop: loop\n        });\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({\n      start: start % count,\n      end: last % count,\n      loop: loop\n    });\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  var points = line.points;\n  var spanGaps = line.options.spanGaps;\n  var count = points.length;\n  if (!count) {\n    return [];\n  }\n  var loop = !!line._loop;\n  var _findStartAndEnd = findStartAndEnd(points, count, loop, spanGaps),\n    start = _findStartAndEnd.start,\n    end = _findStartAndEnd.end;\n  if (spanGaps === true) {\n    return splitByStyles(line, [{\n      start: start,\n      end: end,\n      loop: loop\n    }], points, segmentOptions);\n  }\n  var max = end < start ? end + count : end;\n  var completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  var chartContext = line._chart.getContext();\n  var baseStyle = readStyle(line.options);\n  var datasetIndex = line._datasetIndex,\n    spanGaps = line.options.spanGaps;\n  var count = points.length;\n  var result = [];\n  var prevStyle = baseStyle;\n  var start = segments[0].start;\n  var i = start;\n  function addStyle(s, e, l, st) {\n    var dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({\n        start: s % count,\n        end: e % count,\n        loop: l,\n        style: st\n      });\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  var _iterator11 = _createForOfIteratorHelper(segments),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var segment = _step11.value;\n      start = spanGaps ? start : segment.start;\n      var prev = points[start % count];\n      var style = void 0;\n      for (i = start + 1; i <= segment.end; i++) {\n        var pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex: datasetIndex\n        })));\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n        prev = pt;\n        prevStyle = style;\n      }\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _objectSpread from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _slicedToArray from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as _getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n        _this._request = null;\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          _this2._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          _this2._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n      if (!items || !items.length) {\n        return;\n      }\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      var items = anims.items;\n      var i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n  return Animator;\n}();\nvar animator = new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n    var c1 = c0.valid && _color(to || transparent);\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n  return Animation;\n}();\nvar numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nvar colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined\n});\nvar animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: function _scriptable(name) {\n    return name !== 'onProgress' && name !== 'onComplete' && name !== 'fn';\n  }\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  }\n});\ndefaults.describe('animations', {\n  _fallback: 'animation'\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      }\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: function fn(v) {\n          return v | 0;\n        }\n      }\n    }\n  }\n});\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        var resolved = {};\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      var animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      var animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n  return Animations;\n}();\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  var options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n  return options;\n}\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  var t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n  var i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n    min = _scale$getUserBounds.min,\n    max = _scale$getUserBounds.max,\n    minDefined = _scale$getUserBounds.minDefined,\n    maxDefined = _scale$getUserBounds.maxDefined;\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n    meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n    vScale = meta.vScale,\n    datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n      value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  var _iterator3 = _createForOfIteratorHelper(items),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n      this._dataCheck();\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n        data = this._data;\n      var iScale = meta.iScale,\n        _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n        _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n        xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n        _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n        yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n      var otherScale = this._getOtherScale(scale);\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      var _getUserBounds = getUserBounds(otherScale),\n        otherMin = _getUserBounds.min,\n        otherMax = _getUserBounds.max;\n      var i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n      var context = function context() {\n        return _this3.getContext(index, active);\n      };\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      var options;\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      var animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n            method = _step4$value[0],\n            arg1 = _step4$value[1],\n            arg2 = _step4$value[2];\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n      var move = function move(arr) {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n          method = _args2[0],\n          arg1 = _args2[1],\n          arg2 = _args2[2];\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      var newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n  return DatasetController;\n}();\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n  var _borderProps = borderProps(properties),\n    start = _borderProps.start,\n    end = _borderProps.end,\n    reverse = _borderProps.reverse,\n    top = _borderProps.top,\n    bottom = _borderProps.bottom;\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n  function BarController() {\n    _classCallCheck(this, BarController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(BarController).apply(this, arguments));\n  }\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n        _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n        xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n        _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n        yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n      var custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n        vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n        vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n      var ruler = this._getRuler();\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio.sharedOptions,\n        includeOptions = _this$_getSharedOptio.includeOptions;\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n      var skipNull = function skipNull(meta) {\n        var parsed = meta.controller.getParsed(dataIndex);\n        var val = parsed && parsed[meta.vScale.axis];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n      var _iterator5 = _createForOfIteratorHelper(metasets),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var meta = _step5.value;\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n        vScale = _this$_cachedMeta.vScale,\n        _stacked = _this$_cachedMeta._stacked,\n        _this$options = this.options,\n        baseValue = _this$options.base,\n        minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n  return BarController;\n}(DatasetController);\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n};\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(BubbleController).apply(this, arguments));\n  }\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var xScale = meta.xScale,\n        yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n        iScale = _this$_cachedMeta2.iScale,\n        vScale = _this$_cachedMeta2.vScale;\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio2.sharedOptions,\n        includeOptions = _this$_getSharedOptio2.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      var radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n  return BubbleController;\n}(DatasetController);\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        }\n      }\n    }\n  }\n};\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n    _classCallCheck(this, DoughnutController);\n    _this4 = _possibleConstructorReturn(this, _getPrototypeOf(DoughnutController).call(this, chart, datasetIndex));\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n            key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n        var i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n          var rotation = controller._getRotation();\n          var circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      var chartWeight = this._getRingWeight(this.index);\n      var _this$_getRotationExt = this._getRotationExtents(),\n        circumference = _this$_getRotationExt.circumference,\n        rotation = _this$_getRotationExt.rotation;\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n        ratioX = _getRatioAndOffset.ratioX,\n        ratioY = _getRatioAndOffset.ratioY,\n        offsetX = _getRatioAndOffset.offsetX,\n        offsetY = _getRatioAndOffset.offsetY;\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio3.sharedOptions,\n        includeOptions = _this$_getSharedOptio3.includeOptions;\n      var startAngle = this._getRotation();\n      var i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n  return DoughnutController;\n}(DatasetController);\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n};\nDoughnutController.descriptors = {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing';\n  }\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem) {\n          var dataLabel = tooltipItem.label;\n          var value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n  function LineController() {\n    _classCallCheck(this, LineController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(LineController).apply(this, arguments));\n  }\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n        _meta$data = meta.data,\n        points = _meta$data === void 0 ? [] : _meta$data,\n        _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi.start,\n        count = _getStartAndCountOfVi.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n        iScale = _this$_cachedMeta3.iScale,\n        vScale = _this$_cachedMeta3.vScale,\n        _stacked = _this$_cachedMeta3._stacked,\n        _dataset = _this$_cachedMeta3._dataset;\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n        sharedOptions = _this$_getSharedOptio4.sharedOptions,\n        includeOptions = _this$_getSharedOptio4.includeOptions;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n        spanGaps = _this$options2.spanGaps,\n        segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n  return LineController;\n}(DatasetController);\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n};\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n    _classCallCheck(this, PolarAreaController);\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(PolarAreaController).call(this, chart, datasetIndex));\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n  return PolarAreaController;\n}(DatasetController);\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            var pointStyle = chart.legend.options.labels.pointStyle;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n  function PieController() {\n    _classCallCheck(this, PieController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(PieController).apply(this, arguments));\n  }\n  return PieController;\n}(DoughnutController);\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadarController).apply(this, arguments));\n  }\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n  return RadarController;\n}(DatasetController);\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n};\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps.x,\n        y = _this$getProps.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n      var anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n  return Element;\n}();\nElement.defaults = {};\nElement.defaultRoutes = undefined;\nvar formatters = {\n  values: function values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric: function numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var locale = this.chart.options.locale;\n    var notation;\n    var delta = tickValue;\n    if (ticks.length > 1) {\n      var maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    var logDelta = log10(Math.abs(delta));\n    var numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    var options = {\n      notation: notation,\n      minimumFractionDigits: numDecimal,\n      maximumFractionDigits: numDecimal\n    };\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic: function logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    var remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  var delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {\n  formatters: formatters\n};\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: function tickWidth(_ctx, options) {\n      return options.lineWidth;\n    },\n    tickColor: function tickColor(_ctx, options) {\n      return options.color;\n    },\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: function _scriptable(name) {\n    return !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'tickBorderDash';\n  }\n});\ndefaults.describe('scales', {\n  _fallback: 'scale'\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: function _scriptable(name) {\n    return name !== 'backdropPadding' && name !== 'callback';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'backdropPadding';\n  }\n});\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n  var tickLength = scale._tickSize();\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  var factors = _factorize(evenMajorSpacing);\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n    left = scale.left,\n    bottom = scale.bottom,\n    right = scale.right,\n    chart = scale.chart;\n  var chartArea = chart.chartArea,\n    scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n  function Scale(cfg) {\n    var _this9;\n    _classCallCheck(this, Scale);\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(Scale).call(this));\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n        _userMax = this._userMax,\n        _suggestedMin = this._suggestedMin,\n        _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n        min = _this$getUserBounds.min,\n        max = _this$getUserBounds.max,\n        minDefined = _this$getUserBounds.minDefined,\n        maxDefined = _this$getUserBounds.maxDefined;\n      var range;\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n      var metas = this.getMatchingVisibleMetas();\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options3 = this.options,\n        beginAtZero = _this$options3.beginAtZero,\n        grace = _this$options3.grace,\n        tickOpts = _this$options3.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = this.ticks.length;\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      var labelSizes = this._getLabelSizes();\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n        _this$options4 = this.options,\n        tickOpts = _this$options4.ticks,\n        titleOpts = _this$options4.title,\n        gridOpts = _this$options4.grid;\n      var display = this._isVisible();\n      var isHorizontal = this.isHorizontal();\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n            first = _this$_getLabelSizes.first,\n            last = _this$_getLabelSizes.last,\n            widest = _this$_getLabelSizes.widest,\n            highest = _this$_getLabelSizes.highest;\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options5 = this.options,\n        _this$options5$ticks = _this$options5.ticks,\n        align = _this$options5$ticks.align,\n        padding = _this$options5$ticks.padding,\n        position = _this$options5.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options6 = this.options,\n        axis = _this$options6.axis,\n        position = _this$options6.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length) {\n      var ctx = this.ctx,\n        caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n        max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var labelSizes = this._getLabelSizes();\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n        position = options.position;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      var axisHalfWidth = axisWidth / 2;\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        var optsAtIndex = grid.setContext(this.getContext(i));\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndex.borderDash || [];\n        var borderDashOffset = optsAtIndex.borderDashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n        optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n        crossAlign = optionTicks.crossAlign,\n        padding = optionTicks.padding,\n        mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      var labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n        if (isHorizontal) {\n          x = pixel;\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        var backdrop = void 0;\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = y + textOffset - labelPadding.top;\n          var left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation: rotation,\n          label: label,\n          font: font,\n          color: color,\n          strokeColor: strokeColor,\n          strokeWidth: strokeWidth,\n          textOffset: textOffset,\n          textAlign: tickTextAlign,\n          textBaseline: textBaseline,\n          translation: [x, y],\n          backdrop: backdrop\n        });\n      }\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options7 = this.options,\n        position = _this$options7.position,\n        ticks = _this$options7.ticks;\n      var rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      var align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options8 = this.options,\n        position = _this$options8.position,\n        _this$options8$ticks = _this$options8.ticks,\n        crossAlign = _this$options8$ticks.crossAlign,\n        mirror = _this$options8$ticks.mirror,\n        padding = _this$options8$ticks.padding;\n      var labelSizes = this._getLabelSizes();\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      var chart = this.chart;\n      var position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n        backgroundColor = this.options.backgroundColor,\n        left = this.left,\n        top = this.top,\n        width = this.width,\n        height = this.height;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      var i, ilen;\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n        ctx = this.ctx,\n        grid = this.options.grid;\n      var borderOpts = grid.setContext(this.getContext());\n      var axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      var ctx = this.ctx;\n      var area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      var i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        var item = items[i];\n        var tickFont = item.font;\n        var label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        var y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n        _this$options9 = this.options,\n        position = _this$options9.position,\n        title = _this$options9.title,\n        reverse = _this$options9.reverse;\n      if (!title.display) {\n        return;\n      }\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      var _titleArgs = titleArgs(this, offset, position, align),\n        titleX = _titleArgs.titleX,\n        titleY = _titleArgs.titleY,\n        maxWidth = _titleArgs.maxWidth,\n        rotation = _titleArgs.rotation;\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n          _this10.drawGrid(chartArea);\n          _this10.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n  return Scale;\n}(Element);\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n  return TypedRegistry;\n}();\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }]);\n  return Registry;\n}();\nvar registry = new Registry();\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScatterController).apply(this, arguments));\n  }\n  _createClass(ScatterController, [{\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n        points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n        start = _getStartAndCountOfVi2.start,\n        count = _getStartAndCountOfVi2.count;\n      this._drawStart = start;\n      this._drawCount = count;\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      if (this.options.showLine) {\n        var line = meta.dataset,\n          _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      }\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = registry.getElement('line');\n      }\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n        iScale = _this$_cachedMeta4.iScale,\n        vScale = _this$_cachedMeta4.vScale,\n        _stacked = _this$_cachedMeta4._stacked,\n        _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options10 = this.options,\n        spanGaps = _this$options10.spanGaps,\n        segment = _this$options10.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n      if (!this.options.showLine) {\n        var max = 0;\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n      }\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      if (!data.length) {\n        return border;\n      }\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n  return ScatterController;\n}(DatasetController);\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PolarAreaController: PolarAreaController,\n  PieController: PieController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nvar DateAdapter = /*#__PURE__*/function () {\n  function DateAdapter(options) {\n    _classCallCheck(this, DateAdapter);\n    this.options = options || {};\n  }\n  _createClass(DateAdapter, [{\n    key: \"init\",\n    value: function init(chartOptions) {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, format) {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format(timestamp, _format) {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add(timestamp, amount, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff(a, b, unit) {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf(timestamp, unit) {\n      return abstract();\n    }\n  }]);\n  return DateAdapter;\n}();\nDateAdapter.override = function (members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n    data = metaset.data,\n    _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n      _index2 = _metasets$i.index,\n      data = _metasets$i.data;\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n      lo = _binarySearch.lo,\n      hi = _binarySearch.hi;\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n      startAngle = _element$getProps.startAngle,\n      endAngle = _element$getProps.endAngle;\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      }),\n      angle = _getAngleFromPoint.angle;\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    var distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  var stacks = {};\n  var _iterator6 = _createForOfIteratorHelper(layouts),\n    _step6;\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var wrap = _step6.value;\n      var stack = wrap.stack,\n        pos = wrap.pos,\n        stackWeight = wrap.stackWeight;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n    hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n    box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n      same = _updateDims.same,\n      other = _updateDims.other;\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n    y = chartArea.y;\n  var _iterator7 = _createForOfIteratorHelper(boxes),\n    _step7;\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var layout = _step7.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n        var _width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n  return BasePlatform;\n}();\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n    return _possibleConstructorReturn(this, _getPrototypeOf(BasicPlatform).apply(this, arguments));\n  }\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n  return BasicPlatform;\n}(BasePlatform);\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n  var _getRelativePosition = getRelativePosition(event, chart),\n    x = _getRelativePosition.x,\n    y = _getRelativePosition.y;\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator8 = _createForOfIteratorHelper(nodeList),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var node = _step8.value;\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator9 = _createForOfIteratorHelper(entries),\n      _step9;\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n    var _iterator10 = _createForOfIteratorHelper(entries),\n      _step10;\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var entry = _step10.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, function (args) {\n    var event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n    return _possibleConstructorReturn(this, _getPrototypeOf(DomPlatform).apply(this, arguments));\n  }\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }]);\n  return DomPlatform;\n}(BasePlatform);\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n    this._init = [];\n  }\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      var result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      var _iterator11 = _createForOfIteratorHelper(descriptors),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var descriptor = _step11.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      var descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n  return PluginService;\n}();\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  var local = config.plugins || [];\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n    localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n  var _iterator12 = _createForOfIteratorHelper(plugins),\n    _step12;\n  try {\n    for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n      var plugin = _step12.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator12.e(err);\n  } finally {\n    _iterator12.f();\n  }\n  return result;\n}\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n    local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var firstIDs = Object.create(null);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n    var axis = determineAxis(id, scaleConf);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nvar keyCache = new Map();\nvar keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  _createClass(Config, [{\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n      var cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n        type = this.type;\n      var cache = this._cachedScopes(mainScope, resetCache);\n      var cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n        type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver.resolver,\n        subPrefixes = _getResolver.subPrefixes;\n      var options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      var _iterator13 = _createForOfIteratorHelper(names),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var prop = _step13.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n        resolver = _getResolver2.resolver;\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }, {\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }]);\n  return Config;\n}();\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).reduce(function (acc, key) {\n    return acc || isFunction(value[key]);\n  }, false);\n};\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n    isScriptable = _descriptors2.isScriptable,\n    isIndexable = _descriptors2.isIndexable;\n  var _iterator14 = _createForOfIteratorHelper(names),\n    _step14;\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var prop = _step14.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n  return false;\n}\nvar version = \"3.9.1\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nvar instances = {};\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n  for (var _i2 = 0, _keys = keys; _i2 < _keys.length; _i2++) {\n    var key = _keys[_i2];\n    var intKey = +key;\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n    _classCallCheck(this, Chart);\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  _createClass(Chart, [{\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        var scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n      var metasets = this._metasets,\n        datasets = this.data.datasets;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n            datasetElementType = _defaults$datasets$ty.datasetElementType,\n            dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n          controller = _this$getDatasetMeta.controller;\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      var _active = this._active,\n        _lastEvent = this._lastEvent;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n      var _iterator15 = _createForOfIteratorHelper(changes),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var _step15$value = _step15.value,\n            method = _step15$value.method,\n            start = _step15$value.start,\n            count = _step15$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n      var changeSet = makeSet(0);\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (var _i3 = 0, _ilen = this.data.datasets.length; _i3 < _ilen; ++_i3) {\n        this._updateDataset(_i3, isFunction(mode) ? mode({\n          datasetIndex: _i3\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n          width = _this$_resizeBeforeDr.width,\n          height = _this$_resizeBeforeDr.height;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      var metasets = this.getSortedVisibleDatasetMetas();\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = this.chartArea;\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n        ctx = this.ctx;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n      var listeners = this._listeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n        _this18._eventHandler(e);\n      };\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n      var detached;\n      var attached = function attached() {\n        _remove('attach', attached);\n        _this19.attached = true;\n        _this19.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = function detached() {\n        _this19.attached = false;\n        _remove('resize', listener);\n        _this19._stop();\n        _this19._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n          index = _ref4.index;\n        var meta = _this21.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n        lastActive = _this$_active === void 0 ? [] : _this$_active,\n        options = this.options;\n      var useFinalPosition = replay;\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      var isClick = _isClickEvent(e);\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      var changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }, {\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options11 = this.options,\n        aspectRatio = _this$options11.aspectRatio,\n        maintainAspectRatio = _this$options11.maintainAspectRatio,\n        width = this.width,\n        height = this.height,\n        _aspectRatio = this._aspectRatio;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }]);\n  return Chart;\n}();\nvar invalidatePlugins = function invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n};\nvar enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable: enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable: enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable: enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable: enumerable,\n    value: registry\n  },\n  version: {\n    enumerable: enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable: enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable: enumerable,\n    value: function value() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }\n});\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    x = element.x,\n    y = element.y,\n    outerRadius = element.outerRadius,\n    innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n    y = element.y,\n    start = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n  if (spacing) {\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n    outerStart = _parseBorderRadius$.outerStart,\n    outerEnd = _parseBorderRadius$.outerEnd,\n    innerStart = _parseBorderRadius$.innerStart,\n    innerEnd = _parseBorderRadius$.innerEnd;\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n    startAngle = element.startAngle,\n    circumference = element.circumference;\n  var endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  var x = element.x,\n    y = element.y,\n    startAngle = element.startAngle,\n    pixelMargin = element.pixelMargin,\n    fullCircles = element.fullCircles;\n  var outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  var innerRadius = element.innerRadius + pixelMargin;\n  var i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  var options = element.options;\n  var borderWidth = options.borderWidth,\n    borderJoinStyle = options.borderJoinStyle;\n  var inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n  function ArcElement(cfg) {\n    var _this23;\n    _classCallCheck(this, ArcElement);\n    _this23 = _possibleConstructorReturn(this, _getPrototypeOf(ArcElement).call(this));\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this23)), cfg);\n    }\n    return _this23;\n  }\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n          x: chartX,\n          y: chartY\n        }),\n        angle = _getAngleFromPoint2.angle,\n        distance = _getAngleFromPoint2.distance;\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        startAngle = _this$getProps2.startAngle,\n        endAngle = _this$getProps2.endAngle,\n        innerRadius = _this$getProps2.innerRadius,\n        outerRadius = _this$getProps2.outerRadius,\n        circumference = _this$getProps2.circumference;\n      var rAdjust = this.options.spacing / 2;\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      var betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n        x = _this$getProps3.x,\n        y = _this$getProps3.y,\n        startAngle = _this$getProps3.startAngle,\n        endAngle = _this$getProps3.endAngle,\n        innerRadius = _this$getProps3.innerRadius,\n        outerRadius = _this$getProps3.outerRadius;\n      var _this$options12 = this.options,\n        offset = _this$options12.offset,\n        spacing = _this$options12.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n        circumference = this.circumference;\n      var offset = (options.offset || 0) / 2;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      var radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        var halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      var endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n      ctx.restore();\n    }\n  }]);\n  return ArcElement;\n}(Element);\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n    paramsStart = _params$start === void 0 ? 0 : _params$start,\n    _params$end = params.end,\n    paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n    segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n    options = line.options;\n  var _pathVars = pathVars(points, segment, params),\n    count = _pathVars.count,\n    start = _pathVars.start,\n    loop = _pathVars.loop,\n    ilen = _pathVars.ilen;\n  var lineMethod = getLineMethod(options);\n  var _ref5 = params || {},\n    _ref5$move = _ref5.move,\n    move = _ref5$move === void 0 ? true : _ref5$move,\n    reverse = _ref5.reverse;\n  var i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n  var _pathVars2 = pathVars(points, segment, params),\n    count = _pathVars2.count,\n    start = _pathVars2.start,\n    ilen = _pathVars2.ilen;\n  var _ref6 = params || {},\n    _ref6$move = _ref6.move,\n    move = _ref6$move === void 0 ? true : _ref6$move,\n    reverse = _ref6.reverse;\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n    options = line.options;\n  var segmentMethod = _getSegmentMethod(line);\n  var _iterator16 = _createForOfIteratorHelper(segments),\n    _step16;\n  try {\n    for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n      var segment = _step16.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator16.e(err);\n  } finally {\n    _iterator16.f();\n  }\n}\nvar usePath2D = typeof Path2D === 'function';\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n  function LineElement(cfg) {\n    var _this24;\n    _classCallCheck(this, LineElement);\n    _this24 = _possibleConstructorReturn(this, _getPrototypeOf(LineElement).call(this));\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this24)), cfg);\n    }\n    return _this24;\n  }\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      var result = [];\n      var _interpolate = _getInterpolationMethod(options);\n      var i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n          start = _segments$i.start,\n          end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n      var segmentMethod = _getSegmentMethod(this);\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      var _iterator17 = _createForOfIteratorHelper(segments),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var segment = _step17.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        _draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }, {\n    key: \"points\",\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    },\n    get: function get() {\n      return this._points;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }]);\n  return LineElement;\n}(Element);\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n};\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n    value = _el$getProps[axis];\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n  function PointElement(cfg) {\n    var _this25;\n    _classCallCheck(this, PointElement);\n    _this25 = _possibleConstructorReturn(this, _getPrototypeOf(PointElement).call(this));\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this25)), cfg);\n    }\n    return _this25;\n  }\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps4.x,\n        y = _this$getProps4.y;\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n        x = _this$getProps5.x,\n        y = _this$getProps5.y;\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }]);\n  return PointElement;\n}(Element);\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n    x = _bar$getProps.x,\n    y = _bar$getProps.y,\n    base = _bar$getProps.base,\n    width = _bar$getProps.width,\n    height = _bar$getProps.height;\n  var left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n    enableBorderRadius = _bar$getProps2.enableBorderRadius;\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n  function BarElement(cfg) {\n    var _this26;\n    _classCallCheck(this, BarElement);\n    _this26 = _possibleConstructorReturn(this, _getPrototypeOf(BarElement).call(this));\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_assertThisInitialized(_this26)), cfg);\n    }\n    return _this26;\n  }\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n        _this$options13 = this.options,\n        borderColor = _this$options13.borderColor,\n        backgroundColor = _this$options13.backgroundColor;\n      var _boundingRects = boundingRects(this),\n        inner = _boundingRects.inner,\n        outer = _boundingRects.outer;\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n        x = _this$getProps6.x,\n        y = _this$getProps6.y,\n        base = _this$getProps6.base,\n        horizontal = _this$getProps6.horizontal;\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n  return BarElement;\n}(Element);\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  LineElement: LineElement,\n  PointElement: PointElement,\n  BarElement: BarElement\n});\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n      pointAx = _data$a.x,\n      pointAy = _data$a.y;\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex1], {\n            x: avgX\n          }));\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread({}, data[intermediateIndex2], {\n            x: avgX\n          }));\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      value: data\n    });\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n    min = _iScale$getUserBounds.min,\n    max = _iScale$getUserBounds.max,\n    minDefined = _iScale$getUserBounds.minDefined,\n    maxDefined = _iScale$getUserBounds.maxDefined;\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {\n    start: start,\n    count: count\n  };\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n        indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      var xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n        start = _getStartAndCountOfVi3.start,\n        count = _getStartAndCountOfVi3.count;\n      var threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n      var decimated;\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n  var _iterator18 = _createForOfIteratorHelper(segments),\n    _step18;\n  try {\n    for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n      var segment = _step18.value;\n      var start = segment.start,\n        end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      var targetSegments = _boundSegments(target, bounds);\n      var _iterator19 = _createForOfIteratorHelper(targetSegments),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var tgt = _step19.value;\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n          var fillSources = _boundSegment(segment, points, subBounds);\n          var _iterator20 = _createForOfIteratorHelper(fillSources),\n            _step20;\n          try {\n            for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n              var fillSource = _step20.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator20.e(err);\n          } finally {\n            _iterator20.f();\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n    }\n  } catch (err) {\n    _iterator18.e(err);\n  } finally {\n    _iterator18.f();\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  var start = first[property];\n  var end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n    _ref7$x = _ref7.x,\n    x = _ref7$x === void 0 ? null : _ref7$x,\n    _ref7$y = _ref7.y,\n    y = _ref7$y === void 0 ? null : _ref7$y;\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n      end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  var target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n    index = source.index,\n    line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n      first = _findPoint.first,\n      last = _findPoint.last,\n      point = _findPoint.point;\n    if (!point || first && last) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push.apply(points, postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n        y = this.y,\n        radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n  return simpleArc;\n}();\nfunction _getTarget(source) {\n  var chart = source.chart,\n    fill = source.fill,\n    line = source.line;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  var boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n    scale = _source$scale === void 0 ? {} : _source$scale,\n    fill = source.fill;\n  var pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n    fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n  var value = _getTargetValue(fill, scale, start);\n  var target = [];\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n  var line = source.line,\n    scale = source.scale,\n    axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n  var _ref9 = fillOption || {},\n    _ref9$above = _ref9.above,\n    above = _ref9$above === void 0 ? color : _ref9$above,\n    _ref9$below = _ref9.below,\n    below = _ref9$below === void 0 ? color : _ref9$below;\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    above = cfg.above,\n    below = cfg.below,\n    area = cfg.area,\n    scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n    points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n  var _iterator21 = _createForOfIteratorHelper(segments),\n    _step21;\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var segment = _step21.value;\n      var start = segment.start,\n        end = segment.end;\n      var firstPoint = points[start];\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n    target = cfg.target,\n    property = cfg.property,\n    color = cfg.color,\n    scale = cfg.scale;\n  var segments = _segments(line, target, property);\n  var _iterator22 = _createForOfIteratorHelper(segments),\n    _step22;\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var _step22$value = _step22.value,\n        src = _step22$value.source,\n        tgt = _step22$value.target,\n        start = _step22$value.start,\n        end = _step22$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n        backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n    top = _scale$chart$chartAre.top,\n    bottom = _scale$chart$chartAre.bottom;\n  var _ref10 = bounds || {},\n    property = _ref10.property,\n    start = _ref10.start,\n    end = _ref10.end;\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n    boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n    _labelOpts$boxWidth = labelOpts.boxWidth,\n    boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n  function Legend(config) {\n    var _this27;\n    _classCallCheck(this, Legend);\n    _this27 = _possibleConstructorReturn(this, _getPrototypeOf(Legend).call(this));\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n        ctx = this.ctx;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n      var titleHeight = this._computeTitleHeight();\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize.boxWidth,\n        itemHeight = _getBoxSize.itemHeight;\n      var width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxWidth = this.maxWidth,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n        maxHeight = this.maxHeight,\n        padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      var titleHeight = this._computeTitleHeight();\n      var hitboxes = this.legendHitBoxes,\n        _this$options14 = this.options,\n        align = _this$options14.align,\n        padding = _this$options14.labels.padding,\n        rtl = _this$options14.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        var row = 0;\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        var _iterator23 = _createForOfIteratorHelper(hitboxes),\n          _step23;\n        try {\n          for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n            var hitbox = _step23.value;\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator23.e(err);\n        } finally {\n          _iterator23.f();\n        }\n      } else {\n        var col = 0;\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n          _step24;\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var _hitbox = _step24.value;\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n      var opts = this.options,\n        columnSizes = this.columnSizes,\n        lineWidths = this.lineWidths,\n        ctx = this.ctx;\n      var align = opts.align,\n        labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var fontColor = labelOpts.color,\n        padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n        boxWidth = _getBoxSize2.boxWidth,\n        boxHeight = _getBoxSize2.boxHeight,\n        itemHeight = _getBoxSize2.itemHeight;\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      var isHorizontal = this.isHorizontal();\n      var titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      var x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n  return Legend;\n}(Element);\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n          usePointStyle = _chart$legend$options.usePointStyle,\n          pointStyle = _chart$legend$options.pointStyle,\n          textAlign = _chart$legend$options.textAlign,\n          color = _chart$legend$options.color;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n  function Title(config) {\n    var _this30;\n    _classCallCheck(this, Title);\n    _this30 = _possibleConstructorReturn(this, _getPrototypeOf(Title).call(this));\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n        left = this.left,\n        bottom = this.bottom,\n        right = this.right,\n        options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n      var _this$_drawArgs = this._drawArgs(offset),\n        titleX = _this$_drawArgs.titleX,\n        titleY = _this$_drawArgs.titleY,\n        maxWidth = _this$_drawArgs.maxWidth,\n        rotation = _this$_drawArgs.rotation;\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n  return Title;\n}(Element);\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n    var i, len;\n    var x = 0;\n    var y = 0;\n    var count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n    datasetIndex = item.datasetIndex,\n    index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n    label = _controller$getLabelA.label,\n    value = _controller$getLabelA.value;\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n    footer = tooltip.footer,\n    title = tooltip.title;\n  var boxWidth = options.boxWidth,\n    boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n  var widthPadding = 0;\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n    height = size.height;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n    width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n    width = size.width;\n  var chartWidth = chart.width,\n    _chart$chartArea = chart.chartArea,\n    left = _chart$chartArea.left,\n    right = _chart$chartArea.right;\n  var xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  var x = size.x,\n    width = size.width;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n    height = size.height;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n    caretPadding = options.caretPadding,\n    cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n    yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n    topLeft = _toTRBLCorners.topLeft,\n    topRight = _toTRBLCorners.topRight,\n    bottomLeft = _toTRBLCorners.bottomLeft,\n    bottomRight = _toTRBLCorners.bottomRight;\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n  function Tooltip(config) {\n    var _this31;\n    _classCallCheck(this, Tooltip);\n    _this31 = _possibleConstructorReturn(this, _getPrototypeOf(Tooltip).call(this));\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart || config._chart;\n    _this31._chart = _this31.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      var title = callbacks.title.apply(this, [context]);\n      var afterTitle = callbacks.afterTitle.apply(this, [context]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(_this32, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(_this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(_this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      var footer = callbacks.footer.apply(this, [tooltipItems]);\n      var afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(_this33, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(_this33, context));\n        labelTextColors.push(scoped.labelTextColor.call(_this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n        cornerRadius = options.cornerRadius;\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n        topLeft = _toTRBLCorners2.topLeft,\n        topRight = _toTRBLCorners2.topRight,\n        bottomLeft = _toTRBLCorners2.bottomLeft,\n        bottomRight = _toTRBLCorners2.bottomRight;\n      var ptX = tooltipPoint.x,\n        ptY = tooltipPoint.y;\n      var width = size.width,\n        height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColors = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColors.borderWidth))) : labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        var borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n        bodyAlign = options.bodyAlign,\n        displayColors = options.displayColors,\n        boxHeight = options.boxHeight,\n        boxWidth = options.boxWidth,\n        boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n        yAlign = this.yAlign;\n      var x = pt.x,\n        y = pt.y;\n      var width = tooltipSize.width,\n        height = tooltipSize.height;\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n        topLeft = _toTRBLCorners3.topLeft,\n        topRight = _toTRBLCorners3.topRight,\n        bottomLeft = _toTRBLCorners3.bottomLeft,\n        bottomRight = _toTRBLCorners3.bottomRight;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n          index = _ref11.index;\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n      var positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      var positionChanged = this._positionChanged(active, e);\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n        caretY = this.caretY,\n        options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n  return Tooltip;\n}(Element);\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title: function title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          var item = tooltipItems[0];\n          var labels = item.chart.data.labels;\n          var labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label: function label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        var label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        var value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor: function labelColor(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0\n        };\n      },\n      labelTextColor: function labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle: function labelPointStyle(tooltipItem) {\n        var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        var options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n  function CategoryScale(cfg) {\n    var _this35;\n    _classCallCheck(this, CategoryScale);\n    _this35 = _possibleConstructorReturn(this, _getPrototypeOf(CategoryScale).call(this, cfg));\n    _this35._startValue = undefined;\n    _this35._valueRange = 0;\n    _this35._addedLabels = [];\n    return _this35;\n  }\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n      if (added.length) {\n        var labels = this.getLabels();\n        var _iterator25 = _createForOfIteratorHelper(added),\n          _step25;\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _step25$value = _step25.value,\n              _index3 = _step25$value.index,\n              label = _step25$value.label;\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n        this._addedLabels = [];\n      }\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n        minDefined = _this$getUserBounds2.minDefined,\n        maxDefined = _this$getUserBounds2.maxDefined;\n      var _this$getMinMax = this.getMinMax(true),\n        min = _this$getMinMax.min,\n        max = _this$getMinMax.max;\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n  return CategoryScale;\n}(Scale);\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n    step = generationOptions.step,\n    min = generationOptions.min,\n    max = generationOptions.max,\n    precision = generationOptions.precision,\n    count = generationOptions.count,\n    maxTicks = generationOptions.maxTicks,\n    maxDigits = generationOptions.maxDigits,\n    includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n    rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({\n      value: Math.round((niceMin + j * spacing) * factor) / factor\n    });\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n    minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n  function LinearScaleBase(cfg) {\n    var _this36;\n    _classCallCheck(this, LinearScaleBase);\n    _this36 = _possibleConstructorReturn(this, _getPrototypeOf(LinearScaleBase).call(this, cfg));\n    _this36.start = undefined;\n    _this36.end = undefined;\n    _this36._startValue = undefined;\n    _this36._endValue = undefined;\n    _this36._valueRange = 0;\n    return _this36;\n  }\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n      var _this$getUserBounds3 = this.getUserBounds(),\n        minDefined = _this$getUserBounds3.minDefined,\n        maxDefined = _this$getUserBounds3.maxDefined;\n      var min = this.min,\n        max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        var offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n        stepSize = tickOpts.stepSize;\n      var maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n  return LinearScaleBase;\n}(Scale);\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n    return _possibleConstructorReturn(this, _getPrototypeOf(LinearScale).apply(this, arguments));\n  }\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n        min = _this$getMinMax2.min,\n        max = _this$getMinMax2.max;\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      var tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n  return LinearScale;\n}(LinearScaleBase);\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  var endExp = Math.floor(log10(dataRange.max));\n  var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  var ticks = [];\n  var tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  var exp = Math.floor(log10(tickVal));\n  var significand = Math.floor(tickVal / Math.pow(10, exp));\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({\n      value: tickVal,\n      major: isMajor(tickVal)\n    });\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || exp === endExp && significand < endSignificand);\n  var lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(tickVal)\n  });\n  return ticks;\n}\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n  function LogarithmicScale(cfg) {\n    var _this37;\n    _classCallCheck(this, LogarithmicScale);\n    _this37 = _possibleConstructorReturn(this, _getPrototypeOf(LogarithmicScale).call(this, cfg));\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n        min = _this$getMinMax3.min,\n        max = _this$getMinMax3.max;\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n        minDefined = _this$getUserBounds4.minDefined,\n        maxDefined = _this$getUserBounds4.maxDefined;\n      var min = this.min;\n      var max = this.max;\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n      var exp = function exp(v, m) {\n        return Math.pow(10, Math.floor(log10(v)) + m);\n      };\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n  return LogarithmicScale;\n}(Scale);\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var extra = getTickBackdropHeight(opts) / 2;\n  var outerDistance = scale.drawingArea;\n  var additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (var i = 0; i < valueCount; i++) {\n    var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    var size = labelSizes[i];\n    var y = yForAngle(pointLabelPosition.y, size.h, angle);\n    var textAlign = getTextAlignForAngle(angle);\n    var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y: y,\n      textAlign: textAlign,\n      left: left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n    pointLabels = scale.options.pointLabels;\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    var plFont = toFont(optsAtIndex.font);\n    var _scale$_pointLabelIte = scale._pointLabelItems[i],\n      x = _scale$_pointLabelIte.x,\n      y = _scale$_pointLabelIte.y,\n      textAlign = _scale$_pointLabelIte.textAlign,\n      left = _scale$_pointLabelIte.left,\n      top = _scale$_pointLabelIte.top,\n      right = _scale$_pointLabelIte.right,\n      bottom = _scale$_pointLabelIte.bottom;\n    var backdropColor = optsAtIndex.backdropColor;\n    if (!isNullOrUndef(backdropColor)) {\n      var borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      var padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      var backdropLeft = left - padding.left;\n      var backdropTop = top - padding.top;\n      var backdropWidth = right - left + padding.width;\n      var backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(function (v) {\n        return v !== 0;\n      })) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n    lineWidth = gridLineOpts.lineWidth;\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n  function RadialLinearScale(cfg) {\n    var _this38;\n    _classCallCheck(this, RadialLinearScale);\n    _this38 = _possibleConstructorReturn(this, _getPrototypeOf(RadialLinearScale).call(this, cfg));\n    _this38.xCenter = undefined;\n    _this38.yCenter = undefined;\n    _this38.drawingArea = undefined;\n    _this38._pointLabels = [];\n    _this38._pointLabelItems = [];\n    return _this38;\n  }\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n        min = _this$getMinMax4.min,\n        max = _this$getMinMax4.max;\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this39 = this;\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this39.options.pointLabels.callback, [value, index], _this39);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this39.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n        left = _this$_pointLabelItem.left,\n        top = _this$_pointLabelItem.top,\n        right = _this$_pointLabelItem.right,\n        bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options15 = this.options,\n        backgroundColor = _this$options15.backgroundColor,\n        circular = _this$options15.grid.circular;\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this40 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n        grid = opts.grid;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0) {\n            offset = _this40.getDistanceFromCenterForValue(tick.value);\n            var optsAtIndex = grid.setContext(_this40.getContext(index - 1));\n            drawRadiusLine(_this40, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n            lineWidth = optsAtIndex.lineWidth;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this41 = this;\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        var optsAtIndex = tickOpts.setContext(_this41.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this41.getDistanceFromCenterForValue(_this41.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n  return RadialLinearScale;\n}(LinearScaleBase);\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = Object.keys(INTERVALS);\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n    parser = _scale$_parseOpts.parser,\n    round = _scale$_parseOpts.round,\n    isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n      lo = _lookup2.lo,\n      hi = _lookup2.hi;\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n  function TimeScale(props) {\n    var _this42;\n    _classCallCheck(this, TimeScale);\n    _this42 = _possibleConstructorReturn(this, _getPrototypeOf(TimeScale).call(this, props));\n    _this42._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this42._unit = 'day';\n    _this42._majorUnit = undefined;\n    _this42._offsets = {};\n    _this42._normalized = false;\n    _this42._parseOpts = undefined;\n    return _this42;\n  }\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts, opts) {\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n      var _this$getUserBounds5 = this.getUserBounds(),\n        min = _this$getUserBounds5.min,\n        max = _this$getUserBounds5.max,\n        minDefined = _this$getUserBounds5.minDefined,\n        maxDefined = _this$getUserBounds5.maxDefined;\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      var min = this.min;\n      var max = this.max;\n      var ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets(timestamps) {\n      var start = 0;\n      var end = 0;\n      var first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort(function (a, b) {\n        return a - b;\n      }).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      var label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      var formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      var size = this._getLabelSize(exampleLabel);\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n  return TimeScale;\n}(Scale);\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n  function TimeSeriesScale(props) {\n    var _this43;\n    _classCallCheck(this, TimeSeriesScale);\n    _this43 = _possibleConstructorReturn(this, _getPrototypeOf(TimeSeriesScale).call(this, props));\n    _this43._table = [];\n    _this43._minPos = undefined;\n    _this43._tableRange = undefined;\n    return _this43;\n  }\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n        max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n  return TimeSeriesScale;\n}(TimeScale);\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };","/*!\n * chartjs-plugin-datalabels v2.1.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\nvar devicePixelRatio = function () {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n  return 1;\n}();\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function toTextLines(inputs) {\n    var lines = [];\n    var input;\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n    return lines;\n  },\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function textSize(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n    ctx.font = font.string;\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n    ctx.font = prev;\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function bound(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function arrayDiff(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n    return updates;\n  },\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function rasterize(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n  if (x0 === null) {\n    return {\n      x: 0,\n      y: -1\n    };\n  }\n  if (y0 === null) {\n    return {\n      x: 1,\n      y: 0\n    };\n  }\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n    case 'center':\n      vx = vy = 0;\n      break;\n    case 'bottom':\n      vx = 0;\n      vy = 1;\n      break;\n    case 'right':\n      vx = 1;\n      vy = 0;\n      break;\n    case 'left':\n      vx = -1;\n      vy = 0;\n      break;\n    case 'top':\n      vx = 0;\n      vy = -1;\n      break;\n    case 'start':\n      vx = -vx;\n      vy = -vy;\n      break;\n    case 'end':\n      // keep natural orientation\n      break;\n    default:\n      // clockwise rotation (in degree)\n      align *= Math.PI / 180;\n      vx = Math.cos(align);\n      vy = Math.sin(align);\n      break;\n  }\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n  return res;\n}\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || r0 & r1) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\nvar positioners = {\n  arc: function arc(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n  point: function point(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n  bar: function bar(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n  fallback: function fallback(el, config) {\n    var v = orient(el, config.origin);\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\nvar rasterize = utils.rasterize;\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n  if (!scale) {\n    return null;\n  }\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {\n      x: scale.xCenter,\n      y: scale.yCenter\n    };\n  }\n  var pixel = scale.getBasePixel();\n  return el.horizontal ? {\n    x: pixel,\n    y: null\n  } : {\n    x: null,\n    y: pixel\n  };\n}\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n  ctx.beginPath();\n  drawRoundedRect(ctx, rasterize(rect.x) + borderWidth / 2, rasterize(rect.y) + borderWidth / 2, rasterize(rect.w) - borderWidth, rasterize(rect.h) - borderWidth, model.borderRadius);\n  ctx.closePath();\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n    ctx.fillText(text, x, y, w);\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n  if (!ilen || !filled && !stroked) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\nvar Label = function Label(config, ctx, el, index) {\n  var me = this;\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function _modelize(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n  update: function update(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n    me._model = model;\n    me._rects = rects;\n  },\n  geometry: function geometry() {\n    return this._rects ? this._rects.frame : {};\n  },\n  rotation: function rotation() {\n    return this._model ? this._model.rotation : 0;\n  },\n  visible: function visible() {\n    return this._model && this._model.opacity;\n  },\n  model: function model() {\n    return this._model;\n  },\n  draw: function draw(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n    if (!this.visible()) {\n      return;\n    }\n    ctx.save();\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    }\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n    ctx.restore();\n  }\n});\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991; // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n  return {\n    min: min,\n    max: max\n  };\n}\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\nvar HitBox = function HitBox() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\nmerge(HitBox.prototype, {\n  center: function center() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n  update: function update(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n  contains: function contains(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n    point = rotated(point, me.center(), -me._rotation);\n    return !(point.x < rect.x - margin || point.y < rect.y - margin || point.x > rect.x + rect.w + margin * 2 || point.y > rect.y + rect.h + margin * 2);\n  },\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function intersects(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [toAxis(r0[0], r0[1]), toAxis(r0[0], r0[3])];\n    var i, pr0, pr1;\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(toAxis(r1[0], r1[1]), toAxis(r1[0], r1[3]));\n    }\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n    return true;\n  },\n  /**\n   * @private\n   */\n  _points: function _points() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n    return [rotated({\n      x: rect.x,\n      y: rect.y\n    }, center, angle), rotated({\n      x: rect.x + rect.w,\n      y: rect.y\n    }, center, angle), rotated({\n      x: rect.x + rect.w,\n      y: rect.y + rect.h\n    }, center, angle), rotated({\n      x: rect.x,\n      y: rect.y + rect.h\n    }, center, angle)];\n  }\n});\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {\n      x: point.x,\n      y: point.y\n    };\n  }\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n  return labels;\n}\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {\n        get: function get(el, p) {\n          return el.getProps([p], true)[p];\n        }\n      });\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function (s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n    if (h0 && h1 || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\nvar layout = {\n  prepare: function prepare(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function (a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n      return sa._idx === sb._idx ? sb._set - sa._set : sb._idx - sa._idx;\n    });\n    this.update(labels);\n    return labels;\n  },\n  update: function update(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n    if (dirty) {\n      compute(labels);\n    }\n  },\n  lookup: function lookup(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n    return null;\n  },\n  draw: function draw(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\nvar formatter = function formatter(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n  if (keys.length) {\n    keys.forEach(function (key) {\n      if (labels[key]) {\n        configs.push(merge({}, [options, labels[key], {\n          _key: key\n        }]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function (target, config) {\n    each(config.listeners || {}, function (fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n    delete config.listeners;\n    return target;\n  }, {});\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n  if (!listeners[groups._set]) {\n    return;\n  }\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n  if (!previous && !label) {\n    return;\n  }\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\nvar plugin = {\n  id: 'datalabels',\n  defaults: defaults,\n  beforeInit: function beforeInit(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n  beforeUpdate: function beforeUpdate(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {}; // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = []; // per dataset labels: [Label[]]\n    expando._labels = []; // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function afterDatasetUpdate(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n    ctx.save();\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function merger(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n  afterUpdate: function afterUpdate(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function afterDatasetsDraw(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n  beforeEvent: function beforeEvent(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n        case 'mousemove':\n        case 'mouseout':\n          handleMoveEvents(chart, event);\n          break;\n        case 'click':\n          handleClickEvents(chart, event);\n          break;\n      }\n    }\n  },\n  afterEvent: function afterEvent(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = update[1] === 1;\n          label.update(label.$context);\n        }\n      }\n    }\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n    delete expando._dirty;\n  }\n};\nexport { plugin as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _objectWithoutProperties from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\nvar defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\nfunction setOptions(chart, nextOptions) {\n  Object.assign(chart.options, nextOptions);\n}\nfunction setLabels(currentData, nextLabels) {\n  currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n  var datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n  var addedDatasets = [];\n  currentData.datasets = nextDatasets.map(function (nextDataset) {\n    // given the new set, find it's current match\n    var currentDataset = currentData.datasets.find(function (dataset) {\n      return dataset[datasetIdKey] === nextDataset[datasetIdKey];\n    });\n    // There is no original to update, so simply add new one\n    if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n      return _objectSpread({}, nextDataset);\n    }\n    addedDatasets.push(currentDataset);\n    Object.assign(currentDataset, nextDataset);\n    return currentDataset;\n  });\n}\nfunction cloneData(data) {\n  var datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n  var nextData = {\n    labels: [],\n    datasets: []\n  };\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n  return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nfunction getDatasetAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n    intersect: true\n  }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nfunction getElementAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n    intersect: true\n  }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nfunction getElementsAtEvent(chart, event) {\n  return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n    intersect: true\n  }, false);\n}\nfunction ChartComponent(param, ref) {\n  var _param$height = param.height,\n    height = _param$height === void 0 ? 150 : _param$height,\n    _param$width = param.width,\n    width = _param$width === void 0 ? 300 : _param$width,\n    _param$redraw = param.redraw,\n    redraw = _param$redraw === void 0 ? false : _param$redraw,\n    datasetIdKey = param.datasetIdKey,\n    type = param.type,\n    data = param.data,\n    options = param.options,\n    _param$plugins = param.plugins,\n    plugins = _param$plugins === void 0 ? [] : _param$plugins,\n    fallbackContent = param.fallbackContent,\n    updateMode = param.updateMode,\n    props = _objectWithoutProperties(param, [\"height\", \"width\", \"redraw\", \"datasetIdKey\", \"type\", \"data\", \"options\", \"plugins\", \"fallbackContent\", \"updateMode\"]);\n  var canvasRef = useRef(null);\n  var chartRef = useRef();\n  var renderChart = function renderChart() {\n    if (!canvasRef.current) return;\n    chartRef.current = new Chart$1(canvasRef.current, {\n      type: type,\n      data: cloneData(data, datasetIdKey),\n      options: options && _objectSpread({}, options),\n      plugins: plugins\n    });\n    reforwardRef(ref, chartRef.current);\n  };\n  var destroyChart = function destroyChart() {\n    reforwardRef(ref, null);\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n  useEffect(function () {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n  useEffect(function () {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n  useEffect(function () {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n  useEffect(function () {\n    if (!chartRef.current) return;\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n  useEffect(function () {\n    if (!chartRef.current) return;\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n  useEffect(function () {\n    renderChart();\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"canvas\", Object.assign({\n    ref: canvasRef,\n    role: \"img\",\n    height: height,\n    width: width\n  }, props), fallbackContent);\n}\nvar Chart = /*#__PURE__*/forwardRef(ChartComponent);\nfunction createTypedChart(type, registerables) {\n  Chart$1.register(registerables);\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Chart, Object.assign({}, props, {\n      ref: ref,\n      type: type\n    }));\n  });\n}\nvar Line = /* #__PURE__ */createTypedChart('line', LineController);\nvar Bar = /* #__PURE__ */createTypedChart('bar', BarController);\nvar Radar = /* #__PURE__ */createTypedChart('radar', RadarController);\nvar Doughnut = /* #__PURE__ */createTypedChart('doughnut', DoughnutController);\nvar PolarArea = /* #__PURE__ */createTypedChart('polarArea', PolarAreaController);\nvar Bubble = /* #__PURE__ */createTypedChart('bubble', BubbleController);\nvar Pie = /* #__PURE__ */createTypedChart('pie', PieController);\nvar Scatter = /* #__PURE__ */createTypedChart('scatter', ScatterController);\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };","import _defineProperty from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\home\\\\Documents\\\\Git  repos\\\\lucas-lopes-tcc\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport { useState } from 'react';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nfunction useListState() {\n  var initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var _useState = useState(initialValue),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var append = function append() {\n    for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {\n      items[_key] = arguments[_key];\n    }\n    return setState(function (current) {\n      return [].concat(_toConsumableArray(current), items);\n    });\n  };\n  var prepend = function prepend() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n    return setState(function (current) {\n      return [].concat(items, _toConsumableArray(current));\n    });\n  };\n  var insert = function insert(index) {\n    for (var _len3 = arguments.length, items = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      items[_key3 - 1] = arguments[_key3];\n    }\n    return setState(function (current) {\n      return [].concat(_toConsumableArray(current.slice(0, index)), items, _toConsumableArray(current.slice(index)));\n    });\n  };\n  var apply = function apply(fn) {\n    return setState(function (current) {\n      return current.map(function (item, index) {\n        return fn(item, index);\n      });\n    });\n  };\n  var remove = function remove() {\n    for (var _len4 = arguments.length, indices = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      indices[_key4] = arguments[_key4];\n    }\n    return setState(function (current) {\n      return current.filter(function (_, index) {\n        return !indices.includes(index);\n      });\n    });\n  };\n  var pop = function pop() {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n      cloned.pop();\n      return cloned;\n    });\n  };\n  var shift = function shift() {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n      cloned.shift();\n      return cloned;\n    });\n  };\n  var reorder = function reorder(_ref) {\n    var from = _ref.from,\n      to = _ref.to;\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n      var item = current[from];\n      cloned.splice(from, 1);\n      cloned.splice(to, 0, item);\n      return cloned;\n    });\n  };\n  var setItem = function setItem(index, item) {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n      cloned[index] = item;\n      return cloned;\n    });\n  };\n  var setItemProp = function setItemProp(index, prop, value) {\n    return setState(function (current) {\n      var cloned = _toConsumableArray(current);\n      cloned[index] = __spreadProps(__spreadValues({}, cloned[index]), _defineProperty({}, prop, value));\n      return cloned;\n    });\n  };\n  var applyWhere = function applyWhere(condition, fn) {\n    return setState(function (current) {\n      return current.map(function (item, index) {\n        return condition(item, index) ? fn(item, index) : item;\n      });\n    });\n  };\n  var filter = function filter(fn) {\n    setState(function (current) {\n      return current.filter(fn);\n    });\n  };\n  return [state, {\n    setState: setState,\n    append: append,\n    prepend: prepend,\n    insert: insert,\n    pop: pop,\n    shift: shift,\n    apply: apply,\n    applyWhere: applyWhere,\n    remove: remove,\n    reorder: reorder,\n    setItem: setItem,\n    setItemProp: setItemProp,\n    filter: filter\n  }];\n}\nexport { useListState };","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 3h18v18H3z\"\n}), 'Square');"],"sourceRoot":""}